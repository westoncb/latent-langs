LatentScript v2 Specification:

CONTEXT block
CONTEXT DomainName {
  CONCEPTS {
    Concept1, Concept2, ..., ConceptN
  }
  
  RELATIONS {
    Relation1(Concept1, Concept2, ...),
    Relation2(Concept3, Concept4, ...), ...  
  }
  
  THEORIES {
    TheoryName1 {
      DEFINES {
        Concept1 := Definition1,
        Concept2 := Definition2, ...
      }
      
      ASSUMES {
        Assumption1, Assumption2, ...
      }
      
      QUESTIONS {
        Question1, Question2, ...
      }
    }
    
    TheoryName2 { ... }
    ...
  }
  
  IMPORTS {
    ImportedConcept1, ImportedConcept2, ... FROM Domain1, Domain2, ...
  }
}

EXPAND block  
EXPAND DomainName {
  EXPLORE Concept1, Concept2, ... FROM TheoryName1, TheoryName2, ...
  CONSIDER Aspect1, Aspect2, ... FOR Concept1, Concept2, ...
  RELATE (Concept1, Concept2) -> Relation1, (Concept3, Concept4) -> Relation2, ...
  ANALOGY (Concept1, Concept2) AS Analogy1 
    MAPPING (Aspect1 TO Aspect2, ...), ...
}

FOCUS block
FOCUS DomainName {
  TheoryName {
    PINPOINTS {
      Concept1, Concept2, ..., ConceptN
      Relation1, Relation2, ..., RelationN  
    }
    
    ELABORATES {
      Concept1 WITH Property1, Property2, ...,
      Concept2 WITH Property3, Property4, ..., 
      ...
    }
    
    CONNECTS {
      (Concept1, Concept2) WITH Relation1 SATISFYING Constraint1,
      (Concept2, Concept3) WITH Relation2 SATISFYING Constraint2,
      ...  
    }
  }
}

CONTRACT block
CONTRACT DomainName {  
  TheoryName {
    STRUCTURES {
      Structure1 {
        (Component1 : Type1, Component2 : Type2, ...), ...
      },
      Structure2 { ... }, ...
    }
    
    DEFINITIONS {
      Concept1 := Expression1,
      Concept2 := Expression2, ...  
    }
    
    IDENTITIES {
      Equation1, Equation2, ...,
      [Condition1] => Equation3, [Condition2] => Equation4, ...
    }
    
    AXIOMS {
      Axiom1, Axiom2, ...
    }
    
    THEOREMS {
      THEOREM TheoremName1 {
        GIVEN Premise1, Premise2, ...
        PROVE Conclusion
        PROOF {
          Step1 BY Justification1
          Step2 BY Justification2
          ...
          THEREFORE Conclusion  
        }
      }
      
      THEOREM TheoremName2 { ... } 
      ...
    }
    
    CONJECTURES {
      CONJECTURE ConjectureName {
        SUPPOSE Hypothesis
        CONCLUDE Implication  
        ARGUMENT {
          INFORMALLY Reasoning1, Reasoning2, ...
        }
      }
    }
        
    EXAMPLES {
      EXAMPLE ExampleName1 {
        LET Variable1 := Value1, Variable2 := Value2, ...
        ASSUME Assumption1, Assumption2, ...
        EXPECT Consequence1, Consequence2, ...
        SHOW DerivationStep1 [BY THEOREM TheoremName], 
             DerivationStep2 [BY LEMMA LemmaName],
             ...
      }
      
      EXAMPLE ExampleName2 { ... }
      ...  
    }
  }
}

CONTEXT MachineLearning {
  CONCEPTS {
    NeuralNetwork, Feedforward, Backpropagation, 
    Weights, Gradient, LossFunction, 
    TrainingData, TestData, ValidationData,
    Optimization, Generalization, Overfitting, Underfitting,
    Regularization, Capacity, GeneralizationError   
  }
  
  RELATIONS {
    Learns(NeuralNetwork, TrainingData),
    UpdatesWeights(Backpropagation, NeuralNetwork),
    MinimizesLoss(Optimization, LossFunction),
    BalancesComplexityAndError(Regularization, NeuralNetwork)
  }
  
  THEORIES {
    NeuralNetworkOptimization {
      DEFINES { 
        Optimization := ProcessOfFindingWeightsThatMinimizeLossFunction
      }
      
      ASSUMES {
        ConvergesToGlobalMinimum(GradientDescent, ConvexLossSurface),
        ConvergesToLocalMinimum(GradientDescent, NonconvexLossSurface)  
      }
      
      QUESTIONS {
        WhatArePropertiesOfLossLandscape,
        HowToAvoidPoorLocalMinima,
        WhatIsEffectOfLearningRateOnOptimization
      }
    }
    
    NeuralNetworkGeneralization {
      DEFINES {
        Generalization := PerformanceOfTrainedModelOnNewData  
      }
      
      ASSUMES {
        ComplexityControlImproveGeneralizationError(Regularization),
        LargeDataReducesGeneralizationError(TrainingData)
      }
      
      QUESTIONS { 
        HowDoesCapacityAffectGeneralization,
        WhenDoesOverfittingOccur,
        HowToAchieveLowGeneralizationError
      }
    }
  }
  
  IMPORTS {
    Neuron, Synapse, ActivationFunction FROM Neuroscience
  }
}

EXPAND NeuralNetworkLearning {
  EXPLORE Weights, Gradient, LossFunction FROM NeuralNetworkOptimization
  EXPLORE Capacity, Overfitting, GeneralizationError FROM NeuralNetworkGeneralization
  CONSIDER GeometricProperties, StatisticalProperties FOR LossLandscape
  RELATE (Capacity, GeneralizationError) -> BalancesComplexityAndError
  ANALOGY (Optimization, PhysicalSystem) AS EnergyMinimization
    MAPPING (LossLandscape TO EnergyLandscape, 
             DescentDirection TO ForceDirection)  
}

FOCUS NeuralNetworkLearning {
  GeneralizationPhenomena {
    PINPOINTS {
      Overfitting, Underfitting, Regularization, 
      GeneralizationError, TrainingData, TestData, ValidationData 
    }
    
    ELABORATES {
      Overfitting WITH HighTrainingAccuracy, HighValidationError,
      Underfitting WITH LowTrainingAccuracy, HighBiasError,
      GeneralizationError WITH DifferenceInTestAndTrainingError
    }
        
    CONNECTS {
      (NeuralNetwork, GeneralizationError) WITH BalancesComplexityAndError
        SATISFYING ComplexityControlImproveGeneralizationError,
      (TrainingData, GeneralizationError) WITH ReducesGeneralizationError
        SATISFYING LargeDataReducesGeneralizationError  
    }
  }
}

CONTRACT NeuralNetworkLearning {
  GeneralizationTheory {
    STRUCTURES {
      ModelCapacity {
        (NumLayers : PositiveInteger, 
         NumNodesPerLayer : PositiveInteger,
         Weights : ListOfFloats)  
      },
      
      GeneralizationBounds {
        (TrainError : Float,
         TestError : Float,  
         SampleComplexityBound : PositiveInteger)
      }
    }
    
    DEFINITIONS {
      EffectiveCapacity := ArgMinModelComplexity {TrainError < Epsilon},
      GeneralizationGap := TestError - TrainError,
      RiskUpperBound := TrainError + ComplexityTerm
    }
    
    IDENTITIES {
      OverfittingRegime <=> (ModelCapacity > EffectiveCapacity),
      UnderfittingRegime <=> (ModelCapacity < EffectiveCapacity),
      [AsymptoticLimit] GeneralizationGap => 0,
      [FiniteSampleLimit] GeneralizationGap <= RiskUpperBound
    }
    
    AXIOMS {
      UniversalApproximation: 
        ExistsNetworkWithSufficientCapacityToApproximateTargetFunction,
      NoFreeLunch:
        NoLearnerGeneralizesWellOnAllPossibleDataDistributions  
    }
    
    THEOREMS {
      THEOREM GeneralizationBound {
        GIVEN BoundedLossFunction, FiniteVCDimension
        PROVE [FiniteData] GeneralizationError <= RiskUpperBound
        PROOF {
          Step1: Decompose GeneralizationError INTO 
                   ApproximationError + EstimationError,
          Step2: Bound ApproximationError BY UniversalApproximation,
          Step3: Bound EstimationError USING Hoeffding [BY FiniteVCDimension],
          THEREFORE GeneralizationError <= RiskUpperBound   
        }
      }
    }
    
    CONJECTURES {  
      CONJECTURE ImplicitRegularization {
        SUPPOSE GradientDescentConvergesTo(FlatMinima)
        CONCLUDE FlatMinimaGeneralizeWell
        ARGUMENT {
          INFORMALLY GradientStochasticityEscapesCurvyAttractors,
                     FlatMinimaCorrespondToSimpleSolutions,
                     SimpleSolutionsMoreLikelyToGeneralize
        }
      }
    }
    
    EXAMPLES {
      EXAMPLE MNISTClassification {
        LET InputDims := 784, 
            NumClasses := 10,
            NumLayers := 3,
            NumNodesPerLayer := 128,
            ActivationFn := Relu,
            LossFn := CrossEntropy,
            RegularizationFn := L2Norm,
            Optimizer := Adam   
        ASSUME FiniteSampleLimit  
        EXPECT LowTrainError, LowTestError
        SHOW OptimizationReducesTrainLoss [BY AXIOM GradientDescent], 
             RegularizationReducesGeneralizationGap [BY THEOREM GeneralizationBound],
             TestError < 1% [BY EXPERIMENT RunningAveragedParameters]
      }
    }
  }
}






CONTEXT CollectiveIntelligence {
  CONCEPTS {
    Colony, Ant, Bee, 
    Pheromone, Stigmergy, 
    Foraging, RecruitmentBehavior,
    EmergentPattern, GlobalCoordination, 
    SelfOrganization, DecentralizedControl,
    ScalingEfficiency, RobustnessToFailure
  }
  
  RELATIONS {
    LaysPheromone(Ant, Environment), 
    FollowsPheromone(Ant, Environment),
    FormsEmergentPattern(Colony, RecruitmentBehavior),
    EnablesGlobalCoordination(Stigmergy, DecentralizedControl)
  }
  
  THEORIES {
    PheromoneSignaling {
      DEFINES {
        Pheromone := ChemicalSignalBetweenIndividuals,
        Stigmergy := ModificationOfSharedEnvironment  
      }
      ASSUMES {
        PheromoneIsVolatile(Evaporation),
        PheromoneIsLocalized(SpatialGradient)
      }
      QUESTIONS {
        HowDoesIndirectCommunicationEnableCoordination,
        WhatIsTheRoleOfAmplification
      }
    }
    
    SwarmIntelligence {
      DEFINES { 
        EmergentPattern := GlobalOrderFromLocalInteractions
      }
      ASSUMES {
        NoExplicitLeadership(DecentralizedControl),
        NoGlobalBlueprint(SelfOrganization)  
      }
      QUESTIONS {
        HowDoSimpleRulesGenerateComplexPatterns,
        WhatAreMinimalConditionsForSwarmIntelligence
      }
    }
  }
}



CONTEXT CellularDifferentiation {
  CONCEPTS {
    Cell, Genome, Gene, GeneExpression, GeneRegulation,
    Transcription, Translation, TranscriptionFactor,
    CellType, CellFate, DifferentiationTrajectory,
    Pluripotency, Multipotency, TerminalDifferentiation,
    Embryogenesis, Organogenesis, Regeneration  
  }
  
  RELATIONS {
    RegulatesExpression(TranscriptionFactor, Gene),
    SpecifiesCellFate(GeneExpressionPattern, CellType),
    ControlsDifferentiation(GeneRegulatoryNetwork, DifferentiationTrajectory) 
  }
  
  THEORIES {
    TranscriptionalRegulation {
      DEFINES {
        TranscriptionFactor := ProteinThatBindsDNAAndRegulatesTranscription,
        GeneRegulatoryNetwork := NetworkOfGenesRegulatingEachOther  
      }
      
      ASSUMES {
        CombinatorialControlOfGeneExpression(TranscriptionFactor),
        DynamicalSystemBehavior(GeneRegulatoryNetwork)
      }
      
      QUESTIONS {
        HowDoTranscriptionFactorsRecognizeTargetGenes,
        HowDoMultipleTranscriptionFactorsIntegrate,
        WhatDeterminesTemporalDynamicsOfGeneExpression  
      }
    }
    
    EpigeneticLandscape {
      DEFINES {
        CellType := StableCellStateWithDistinctMorphologyAndFunction,
        DifferentiationTrajectory := TemporalSequenceOfCellStates
      }
      
      ASSUMES {
        ConvergenceToAttractors(CellFate, GeneExpressionDynamics),
        SmoothTransitionsBetweenStates(DifferentiationTrajectory)  
      }
      
      QUESTIONS {
        WhatDeterminesNumberAndStabilityOfCellTypeAttractors,
        HowDoCellsDecideWhichAttractorToFall,
        CanCellsRevertOrSwitchTrajectory
      }
    }
  }
  
  IMPORTS {
    Morphogen, DevelopmentalPatterning FROM Embryology,
    ChromatinStructure, HistoneModification FROM Epigenetics  
  }
}

EXPAND CellDifferentiation {
  EXPLORE GeneExpression, GeneRegulation FROM TranscriptionalRegulation
  EXPLORE CellFate, DifferentiationTrajectory FROM EpigeneticLandscape 
  CONSIDER TemporalDynamics, SpatialPatterning FOR GeneExpression
  RELATE (GeneRegulatoryNetwork, CellType) -> SpecifiesCellFate
  ANALOGY (CellFate, EnergyMinimum) AS AttractorState
    MAPPING (GeneExpressionDynamics TO PotentialEnergyLandscape,
             CellType TO MetastableState)
}

FOCUS CellDifferentiation {
  DifferentiationMechanisms {
    PINPOINTS {
      GeneRegulatoryNetwork, DifferentiationTrajectory,
      CellTypeAttractor, Pluripotency, TerminalDifferentiation
    }
    
    ELABORATES {
      Pluripotency WITH CapacityToGenerateAllCellTypes,
      TerminalDifferentiation WITH IrreversibleCommitmentToCellFate,
      CellTypeAttractor WITH BalancedExpressionOfMasterRegulators  
    }
    
    CONNECTS {
      (GeneRegulatoryNetwork, DifferentiationTrajectory) 
        WITH ControlsDifferentiation
        SATISFYING DeterministicOutcomeFromInitialState,  
      (CellTypeAttractor, TerminalDifferentiation)
        WITH RepresentsIrreversibleCommitment 
        SATISFYING HighStabilityOfGeneExpressionPattern
    }
  }
}  

CONTRACT CellDifferentiation {
  DifferentiationTheory {
    STRUCTURES {
      GeneRegulatoryNetwork {
        (Genes : SetOfGenes,
         RegulatoryInteractions : SetOfOrderedPairsOfGenes)  
      },
      
      DifferentiationTrajectory {
        (InitialState : CellState, 
         TemporalSequence : ListOfCellStates)
      },
      
      CellTypeAttractor {
        (CoreRegulatoryCircuit : SetOfGenes,
         SteadyStateExpression : MapFromGenesToExpressionLevels)  
      }
    }
    
    DEFINITIONS { 
      CellState := MapFromGenesToExpressionLevels,
      TransitionProbability(S1, S2) := 
        ConditionalProbabilityOfNextStateGivenCurrentState(S1, S2)
    }
    
    IDENTITIES {
      SUM_S2 TransitionProbability(S1, S2) = 1,
      TerminalDifferentiation <=> 
        FORALL S2 != S1 TransitionProbability(S1, S2) < Epsilon 
    }
    
    AXIOMS {
      Determinism:
        InitialStateUniqueleDeterminesTrajectory(DifferentiationTrajectory),
      Convergence:  
        MostTrajectoriesConvergeToAttractors(DifferentiationTrajectory)
    }
    
    THEOREMS {
      THEOREM AttractorNetwork {
        GIVEN HighlyConnectedRegulatorySubgraph(CoreRegulatoryCircuit)   
        PROVE ConvergenceToAttractorState(CellTypeAttractor)
        PROOF {
          Step1: Show MultiStabilityOfIsolatedSubgraph [BY FeedbackLoopAnalysis],
          Step2: Show RobustnessToNoiseAndFluctuations [BY DynamicalSystemAnalysis], 
          THEREFORE ConvergenceToAttractorState(CellTypeAttractor)
        } 
      }
    }
    
    CONJECTURES {
      CONJECTURE LandscapeTopology {
        SUPPOSE FunnelShapedPotentialLandscape(GeneExpressionDynamics)
        CONCLUDE HighProbabilityOfReachingProperCellType
        ARGUMENT {
          INFORMALLY RobustDivergenceOfTrajectories,
                     ProgressiveRestrictionOfPotency,
                     HistoricalContingencyDependingOnDevelopmentalHistory
        }
      }  
    }
    
    EXAMPLES {
      EXAMPLE Hematopoiesis {
        LET StemCell := Multipotent(HematopoieticStemCell),
            Progenitors := [CommonMyeloidProgenitor, CommonLymphoidProgenitor],
            DifferentiatedCells := [Erythrocyte, Neutrophil, Monocyte, Lymphocyte]
        ASSUME HierarchicalDifferentiation(HematopoieticLineageTree)   
        EXPECT ConvergenceToFates(DifferentiatedCells)
        SHOW MultipotencyOfProgenitors [BY EXPERIMENT ColonyFormingAssay],
             IrreversibilityOfDifferentiatedStates [BY EXPERIMENT CellSortingTransplantation]
      }
    }
  }
}




CONTEXT ProteinFolding {
  CONCEPTS {
    Protein, AminoAcid, PrimaryStructure, SecondaryStructure, TertiaryStructure, 
    AlphaHelix, BetaSheet, RandomCoil,
    HydrogenBond, DisulfideBond, VanDerWaalsForce, HydrophobicInteraction,
    ConformationalEntropy, FreeEnergyLandscape, FoldingPathway, FoldingIntermediate,
    MisfoldedState, AggregationProne
  }
  
  RELATIONS {
    Stabilizes(HydrogenBond, SecondaryStructure),
    Stabilizes(HydrophobicInteraction, TertiaryStructure),  
    IncreasesPropensity(AminoAcidSequence, SecondaryStructure),
    DecreasesEntropy(FoldingIntermediate, ConformationalEntropy) 
  }
  
  THEORIES {
    ThermodynamicStability {
      DEFINES {
        NativeState := ConformationWithLowestFreeEnergy,
        FoldingProcess := TransitionFromHighEnergyUnfoldedStateToLowEnergyNativeState
      } 
      
      ASSUMES {
        ProteinFoldsToMinimizeFreeEnergy,
        StabilizingForcesOvercomesConformationalEntropy        
      }
            
      QUESTIONS {
        WhatDeterminesFoldingRate,
        HowToPredictNativeStateFromSequence,
        WhenDoProteinsFailToFold
      }
    }
    
    KineticControl {
      DEFINES {
        FoldingRateLimit := HighestEnergyTransitionState  
      }
      
      ASSUMES {
        FoldingFollowsPathwayOfLeastResistance,
        RateLimitingStepDeterminesFoldingSpeed
      }
      
      QUESTIONS {
        WhatAreCommonFoldingIntermediates,
        HowDoMutationsAffectFoldingKinetics
      }  
    }
  }
  
  IMPORTS {
    Enthalpy, Entropy, GibbsFreeEnergy FROM Thermodynamics,
    CatalysisRate, TransitionState FROM ChemicalKinetics
  }
}

EXPAND ProteinFolding {
  EXPLORE NativeState, FoldingPathway, FoldingIntermediate FROM ThermodynamicStability
  EXPLORE FoldingRateLimit FROM KineticControl
  CONSIDER SequenceFeatures, EnvironmentalConditions FOR FoldingProcess
  RELATE (NativeState, FoldingPathway) -> FreeEnergyLandscape  
  ANALOGY (ProteinFolding, OrganicSynthesis) AS MultiStepProcessWithIntermediates
    MAPPING (FoldingIntermediate TO ReactionIntermediate,
             FoldingRateLimit TO RateLimitingStep)
}
 
FOCUS ProteinFolding {
  FoldingMechanisms {
    PINPOINTS {
      AminoAcidSequence, HydrogenBond, HydrophobicInteraction,
      SecondaryStructure, TertiaryStructure,
      FoldingPathway, FoldingIntermediate, FoldingRateLimit
    }
    
    ELABORATES {
      AlphaHelix WITH HelicalBackboneConformation, StabilizedByBackboneHydrogenBonds,
      BetaSheet WITH ExtendedBackboneConformation, StabilizedByBackboneHydrogenBonds,
      HydrophobicCollapse WITH BurialOfNonpolarResidues, FormationOfMoltenGlobule      
    }
        
    CONNECTS {
      (AminoAcidSequence, SecondaryStructure) WITH IncreasesPropensity 
        SATISFYING HelixFormingResidues(Ala,Glu,Leu),
      (SecondaryStructure, TertiaryStructure) WITH PrecedesFormationOf
        SATISFYING SecondaryStructureFormsBeforeTertiary
    }
  }
}

CONTRACT ProteinFolding {
  FoldingKineticsTheory {
    STRUCTURES {
      FoldingLandscape {
        (UnfoldedState : HighEntropyHighEnergy, 
         IntermediateStates : LowEntropyMediumEnergy,
         NativeState : LowEntropyLowEnergy,
         TransitionBarriers : ListOfTransitionStates)  
      },
            
      FoldingNetworkModel {  
        (UnfoldedNode : InitialNode,
         IntermediateNodes : ListOfIntermediateStates,
         NativeNode : UniqueStableNode)
      }
    }
    
    DEFINITIONS {  
      FoldingRate := InverseOfMeanFirstPassageTime(NativeState),
      RateLimitingBarrier := ArgMaxTransitionState(FreeEnergy),
      FoldingCooperativity := Sharpness(FreeEnergyMinima)
    }
    
    IDENTITIES {
      [TwoStateFolder] FoldingRate ∝ Exp(-RateLimitingBarrier/KT),
      [LowDenaturantLimit] FoldingFluxDistribution == BoltzmannDistribution,  
      [HighDenaturantLimit] MFPT(FoldingNetwork) => RandomWalkMFPT(NumberOfNodes)  
    }
    
    AXIOMS {
      Anfinsen: NativeStateIsThermodynamicallyDeterminedByAminoAcidSequence,
      LevinthalParadox: RandomSearchCannotFindNativeStateInBiologicallyRelevantTime
    }
  
    THEOREMS {
      THEOREM FunnelTheorem {
        GIVEN RoughnessOfEnergyLandscape(Funel) < KT 
        PROVE (1) FoldingFluxConcentratesAlongFunnel,
              (2) FoldingRateIsLimitedByNarrowestRegionOfFunnel 
        PROOF {
          LandscapeRoughness < KT IMPLIES 
            EscapeRateFromLocalMinima > DescentRateToGlobalMinimum 
            [BY KramerRateTheory]
          RECURSIVELY ApplyDescentUntilGlobalMinimum
          LandcapeBottleneckDeterminesRateLimitingStep
          THEREFORE (1) FoldingFluxConcentratesAlongFunnel
                    (2) FoldingRateIsLimitedByNarrowestRegionOfFunnel
        }
      } 
    }
  
    CONJECTURES {
      PrincipleOfMinimalFrustration {
        SUPPOSE EvolutionHasOptimizedFoldingRateAndStability
        CONCLUDE NaturalProteinsHaveSmoothFreeEnergyLandscapes
        ARGUMENT {
          INFORMALLY HighlyFrustratedLandscapesHaveManyTrapsAndSlowFolding.
                     EvolutionSelectsAgainstFrustration.
        } 
      }
    }
      
    EXAMPLES {
      EXAMPLE Chymotrypsin {
        LET AminoAcidSequence := CGTGWVVQVFSYGGCAAKFRRFD...,
            OptimalTemperature := 25°C,
            DenaturantRange := 0-10M Urea,
            SecondaryStructureComposition := 40% AlphaHelix, 30% BetaSheet  
        ASSUME TwoStateFolder, MichaelisMechanismHydrolysis
        EXPECT MoltenGlobuleIntermediate, SingleExponentialFoldingKinetics  
        SHOW HydrophobicCollapseForms(MoltenGlobule) [BY EXPERIMENT HelixSignatureOfIntermediates],
             SingleExponentialFit(FoldingKinetics, Chevron) [BY EXPERIMENT StoppedFlowFluorescence]
      }
    }
  }  
}


CONTEXT ComplexNetworks {
  CONCEPTS {
    Node, Edge, Degree, Centrality, PathLength,
    Cluster, Motif, Community, CorePeriphery,
    ScaleFree, SmallWorld, ModularHierarchical,
    DynamicalProcess, SychronizationR, esonance, CriticalTransition,
    InformationFlow, ComputationalCapacity, EmergentComputation
  }
  
  RELATIONS {
    Connects(Edge, Node, Node),
    HigherDegree(Hub, Periphery),
    ShorterPathLength(SmallWorld, Regular),
    AmplifySignal(Hub, InformationFlow),
    SuppressNoise(Redundancy, InformationLoss),
    EnableGlobalCoordination(Connectivity, Synchronization),
    ConstrainDynamics(Modularity, FunctionalSpecialization)    
  }
      
  THEORIES {
    StatisticalMechanics {
      DEFINES {
        DegreeDistribution := PyPowerLaw(Degree, -Gamma), 
        ClusteringCoefficient := Py3*NumberOfTriangles/NumberOfConnectedTriples
      }
      
      ASSUMES {
        PreferentialAttachment(NewNode, HighDegreeNode),
        TriadicClosure(Node, ConnectedNeighbors)        
      }
      
      QUESTIONS {
        HowDoesNetworkTopologyConstrainDynamics,
        WhatAreUniversalFeaturesOfComplexNetworks
      }  
    }  
        
    InformationTheory {
      DEFINES {  
        MutualInformation(X, Y) := Ent(X) - Ent(X|Y),
        IntegratedInformation(Network) := Ent(Network) - Sum(Ent(Part)) 
      }
      
      ASSUMES {
        InformationIntegrationEnablesEmergentBehaviors,
        ComplexComputationRequiresHighIntegratedInformation
      }
      
      QUESTIONS {
        WhatNetworkPropertiesMaximizeInformationIntegration,
        HowToQuantifyEmergentComputationalCapacity
      }
    }
  }
  
  IMPORTS {  
    StatisticalEnsemble, Entropy, FreeEnergy FROM StatisticalPhysics
    ConditionalEntropy, KLDivergence, EffectiveInformationConcept FROM InformationTheory  
  }
}
    
EXPAND ComplexNetworks {
  EXPLORE SmallWorld, ScaleFree, ModularHierarchical FROM StatisticalMechanics
  EXPLORE InformationIntegration, EmergentComputation FROM InformationTheory
  CONSIDER ConnectivityPatterns, CommunityStructure, CorePeripheryStructure FOR InformationFlow
  RELATE (DegreeDistribution, Hubs) -> AmplifySignal,
         (SmallWorld, ShortestPath) -> EnableRapidSpreading,
         (Modularity, Segregation) -> ConstrainDynamics
  ANALOGY (NeuralNetwork, BrainConnectome) AS ComplexNetworkWithEmergentComputation  
    MAPPING (Neuron TO Node, Synapse TO Edge, 
             FiringRate TO DynamicalState,
             FunctionalConnectivity TO InformationFlow)
}

FOCUS ComplexNetworks {
  EmergentComputationMechanisms {
    PINPOINTS {
      SmallWorldProperty, ScaleFreeTopology, ModularHierarchicalStructure,
      RichClubConnectivity, CorePeripheryOrganization,
      CriticalDynamics, CollectiveComputation    
    } 
        
    ELABORATES {
      RichClub WITH HighlyConnectedHubsThatEnableGlobalIntegration, 
      CorePeriphery WITH DenselyInterconnectedCoreAndSparselyConnectedPeriphery,
      CriticalDynamics WITH DynamicsPoisedAtPhaseTransitionMaximizingCorrelations      
    }
        
    CONNECTS {
      (SmallWorldProperty, RichClub) WITH FacilitateRapidInformationTransfer 
        SATISFYING HighClusteringEnablesSpecialization(Modules) AND 
                  ShortPathLengthEnablesIntegration(RichClub),
      (CriticalDynamics, CollectiveComputation) WITH MaximizeInformationIntegration
        SATISFYING CriticalPointMaximizesDiversity(DynamicalRepertoire) AND
                  CriticalPointMaximizesSensitivity(PerturbationResponses)  
    }
  }  
}

CONTRACT ComplexNetworks {
  EmergentComputationTheory {
    STRUCTURES {
      HeterogeneousAdaptiveNetwork {  
        (Nodes : SetOfAgents, 
         Edges : SetOfInteractions,
         Weights : MatrixOfInteractionStrengths,
         Dynamics : SetOfLocalDynamicalRules)
      }
      
      InformationIntegrationMeasures {
        (Segregation : Modularity,
         Integration : InformationFlow, 
         Complexity : IntegratedInformation,
         Computation : EmergentComputationalCapacity)        
      }
    }
    
    DEFINITIONS {
      CriticalConnectivity(Network) := 2*Ent(DistributionOfWeights),
      EmergentComputationalCapacity(Network) := Ent(AttractorRepertoire),
      ComputationalEfficiency(Network) := EmergentComputationalCapacity/SumOfIndividualCapacities
    }
    
    IDENTITIES {
      [DisorderRegime] IntegratedInformation(RandomGraph) => Entropy(IndependentPartitions),
      [OrderRegime] IntegratedInformation(RegularLattice) => 0,
      [CriticalRegime] IntegratedInformation(Network) => MaxValue,
      ComplexComputation(Network) IFF SeparationOfScales(Structure) AND CriticalDynamics(Dynamics)  
    }
    
    AXIOMS {
      EmergenceAxiom: GlobalBehaviorCannotBeReducedToLocalRules,
      InfoMaxPrinciple: AdaptiveSystemsEvolveToMaximizeFuturePotentialInformation  
    }
    
    THEOREMS {
      THEOREM EmergentComputationTheorem {
        GIVEN CriticalConnectivityStructure AND CriticalDynamics
        PROVE EmergentComputationMaximizesInformationIntegration AND
              EmergentComputationExceedsSumOfIndividualComputations
        PROOF {
          CriticalConnectivity(Network) IMPLIES 
            HighComplexity(Mesoscale) AND BalanceOf(Segregation, Integration)
            [BY ScaleFreeStructure AND SmallWorldProperty AND ModularHierarchicalOrganization]
          CriticalDynamics(Network) IMPLIES
            LargeRepertoireOf(Attractors) AND HighSensitivityTo(Perturbations)
            [BY CriticalSlowing AND DivergingCorrelations]
          HighComplexity(Structure) AND LargeRepertoire(Dynamics) IMPLIES
            MaximizationOfIntegratedInformation(Network)
            [BY IntegratedInformationDefinition]
          RECURSIVELY DecomposeNetworkIntoIndependentPartitions(Network)  
          UpperBoundPartitionedComplexity(IndependentPartitions) <
            IntegratedInformationOfWhole(Network)
          THEREFORE EmergentComputationMaximizesInformationIntegration AND
                    EmergentComputationExceedsSumOfIndividualComputations
        }
      }
    }
        
    CONJECTURES {
      UniversalComputationPrinciple {
        SUPPOSE ComplexNetworksWithEmergentComputationOccurInNature
        CONCLUDE EvolutionOptimizesForUniversalComputationalCapabilities
        ARGUMENT {
          INFORMALLY ComplexAdaptiveSystemsMustSolveVarietyOfComputationalProblems.
                     UniversalComputationConfersMostFlexibilityAndEvolvability.  
        }
      }  
    }
     
    EXAMPLES {
      EXAMPLE BrainConnectome {
        LET ConnectivityMatrix := DiffusionWeightedMRI(HumanBrain),
            ActivationDynamics := FunctionalMRI(RestingState),
            AnatomicalPartition := LobesAndRegions(CorticalSheets),
            FunctionalPartition := RestingStateNetworks(FunctionalConnectivity)  
        ASSUME Modularity(AnatomicalPartition) > Modularity(FunctionalPartition)
        EXPECT RichClubOrganization(HubRegions), 
               CriticalDynamics(RestingStateActivity)
        SHOW SmallWorldProperty(ConnectivityMatrix)  
               [BY EXPERIMENT ShortestPathsAndHighClustering(NetworkAnalysis)],
             LowDimensionalAttractors(ActivationDynamics)
               [BY EXPERIMENT PrincipalComponentsExplainingMostVariance(DimensionalityReduction)]
      }
    }      
  }  
}



CONTEXT BatteryMaterials {
  CONCEPTS {
    Electrode, Cathode, Anode, Electrolyte, ChargeCarrier,
    Ion, Electron, RedoxReaction, ChargeTransfer, MassTransport,
    CrystalStructure, Defect, Dopant, InterfacialFilm,
    EnergyDensity, PowerDensity, CycleLife, SafetyRisk  
  }

  RELATIONS {
    Intercalates(ChargeCarrier, Electrode),
    Conducts(Material, ChargeCarrier),
    Facilitates(Defect, ChargeTransfer),
    Limits(Property, Performance),
    Correlates(Property1, Property2),
    Modulates(Dopant, Property)
  }

  THEORIES {
    IntercalationMechanism {
      DEFINES {
        IntercalationReaction := InsertionOfIonIntoLayeredHost  
      }
      
      ASSUMES {
        ChargeCompensationByRedox,
        ReversibleStructuralChange  
      }
      
      QUESTIONS {
        WhatDeterminesRateLimitingStep,
        HowToOptimizeIonicDiffusivity,
        WhatCausesCapacityFading
      }
    }
    
    InterfacialProcesses {
      DEFINES {  
        SolidElectrolyteInterphase := PassivatingFilmFormedOnElectrode
      }
      
      ASSUMES {
        FilmCompositionDependsOnElectrolyte,
        FilmEvolutionDuringCycling
      }
      
      QUESTIONS {
        HowDoesInterfaceStructureAffectKinetics,  
        WhatIsOptimalSEIComposition,
        HowToControlSEIGrowth
      }
    }
  }

  IMPORTS {
    DiffusionCoefficient, ActivationEnergy FROM TransportTheory,
    BandStructure, FermiLevel, DopingConcentration FROM SolidStatePhysics,
    RedoxPotential, ChargeTransferCoefficient FROM Electrochemistry
  }
}  

EXPAND BatteryMaterials {
  EXPLORE IntercalationReaction, ChargeTransfer, MassTransport FROM IntercalationMechanism
  EXPLORE SolidElectrolyteInterphase FROM InterfacialProcesses
  CONSIDER CrystalStructure, Defect, Dopant FOR Electrode
  CONSIDER Viscosity, IonConductivity, ElectrochemicalStability FOR Electrolyte
  RELATE (CrystalStructure, DefectDensity) -> Intercalates(Ion, Electrode)
  RELATE (IonConductivity, InterfacialResistance) -> Limits(PowerDensity)  
  ANALOGY (Electrode, Sponge) AS PorousMediumWithInternalSurfaceArea
    MAPPING (Defect TO Pore, Intercalation TO Absorption, ChargeCarrier TO Fluid)
}

FOCUS BatteryMaterials {
  DiffusionLimitedIntercalation {
    PINPOINTS {
      IonicRadius, LayerSpacing, DiffusionCoefficient, 
      ActivationBarrier, ChargeTransferRate, ExchangeCurrentDensity
    }
    
    ELABORATES {
      DiffusionCoefficient WITH ArrheniusTemperatureDependence, InverseRelationToIonicRadius,
      LayerSpacing WITH DependenceOnIntercalationDegree, ElasticDeformation,
      ExchangeCurrentDensity WITH ExponentialDependenceOnOverpotential
    }
        
    CONNECTS {
      (IonicRadius, DiffusionCoefficient) WITH InverseCorrelation
        SATISFYING StericHindranceInNarrowLayers,  
      (LayerSpacing, ActivationBarrier) WITH InverseCorrelation
        SATISFYING ExpandedSpacingLowersBarrier,
      (DiffusionCoefficient, ChargeTransferRate) WITH LimitingStep
        SATISFYING AmbipolMechanismInterplay  
    }
  }
}

CONTRACT BatteryMaterials { 
  RateCapabilityTheory {
    STRUCTURES {
      IntercalationElectrode {
        (HostLayeredMaterial : CrystalStructure, 
         GuestIon : ChargeCarrier,
         DefectSites : ListOfPointDefects,
         DopantElements: ListOfDopants)
      },

      ElectrolyteSystem {
        (SolventMixture : Composition,
         SaltDissolved : Concentration,  
         AdditiveSpecies : ListOfFunctionalMolecules,
         SeparatorMembrane : PorousStructure)  
      }
    }
    
    DEFINITIONS {
      RateCapability := MaxSustainableCurrentDensity,
      DiffusionTimescale := L^2 / D_eff, 
      ChargeTransferTimescale := F / (j0 * A),
      EffectiveDiffusivity := D0 * exp(-E_a / kT) * Connectivity(Structure)
    }
    
    IDENTITIES {
      [DiffusionLimit] RateCapability ∝ Sqrt(D_eff / L^2),  
      [ChargeTransferLimit] RateCapability ∝ j0 * A, 
      [MixedControl] 1/RateCapability = 1/RateDiff + 1/RateChT,
      [StructureProperty] D_eff ∝ exp(-E_hop/ kT) ∝ Connectivity(Structure)
    }
      
    THEOREMS {
      THEOREM OptimalElectrodeStructure {
        GIVEN Electrode WITH 
                HostWithHighConnectivity(Structure),
                GuestWithSmallRadius(Ion),
                DopantsWithHighDiffusivity(Defects) 
        PROVE MaxRateCapability(Electrode) 
        PROOF {
          HighConnectivity(Structure) => 
            LowHoppingBarrier(E_hop) AND 
            HighDiffusionPathDensity
            [BY StructurePropertyRelation]
          SmallRadius(Ion) => HighDiffusionCoefficient(D0) 
            [BY StericEffectRelation]
          HighDiffusivity(Defects) => 
            HighDefectAssistedDiffusivity(D_eff)
            [BY DefectEnhancedTransportTheory]  
          RECURSIVE OptimizationOfComponentProperties  
          THEREFORE MAXIMIZE RateCapability  
        }
      } 
    }

    CONJECTURES {
      IdealElectrolyte {
        SUPPOSE ElectrolyteWith  
                  HighIonConductivity(Solvent, Salt),
                  WideElectrochemicalWindow(Solvent),
                  FastKineticsEnabling(Additive),
                  DendriteSuppressing(Additive)
        CONCLUDE MaxPowerDensity(Electrolyte) AND MinDegradation(Electrode)
        ARGUMENT {
          INFORMALLY HighConductivity => LowIonicResistance => HighRateCapability,
                     WideStabilityWindow => LowParasiticReactions => LongCycleLife,
                     FastKineticsEnabling => LowInterfacialImpedance => HighPowerDelivery, 
                     DendriteSuppressing => LowShortCircuitRisk => EnhancedSafety  
        }
      }
    }

    EXAMPLES {
      EXAMPLE HighRateNMC811Cathode {
        LET CrystalStructure := Layered(NMC811),
            IonicConductivity := 10^-8 S/m,
            ElectronicConductivity := 10^-2 S/m, 
            ParticleSize := 100 nm 
        ASSUME AluminumDoping(2%), 
               ElectrolyteSoaking(1MLiPF6EC:DMC)
        EXPECT RateCapability(10C), ReversibleCapacity(200 mAh/g)
        SHOW LayerSpacingIncrease(3%) [BY EXPERIMENT XRDAnalysis],
             LithiumDiffusivityIncrease(2X) [BY EXPERIMENT GITTMeasurement], 
             DischargeCapacity(180 mAh/g, At10C) [BY EXPERIMENT GalvanostaticCycling]
      }
    }  
  }  
}

CONTEXT GasGiantVortexInteractions {
  CONCEPTS {
    ZonalFlow, MeridionalFlow, VerticalShear, 
    BeltZoneStructure, EastwardJet, WestwardJet,
    BaroclinicInstability, BarotropicInstability,
    ConvectiveOverturning, ConvectivePlume, 
    ThermalWind, ThermalWindShear,
    PotentialVorticityStaircase, VortexCrystal,
    PolygonalVortex, VortexFilamentation,
    WaveMeanFlowInteraction, PotentialVorticityMixing,
    TurbulentCascade, InverseEnergyCascade
  } 
  
  RELATIONS {
    Shears(ZonalFlow, Vortex),
    Advects(ZonalFlow, Vortex),
    Tilts(VerticalShear, Vortex),  
    Destabilizes(BaroclinicInstability, ZonalFlow),
    Destabilizes(BarotropicInstability, ZonalFlow),  
    Generates(ConvectiveOverturning, Vortex),
    Sustains(ConvectivePlume, Vortex),
    Arranges(TurbulentCascade, VortexCrystal),
    Merges(InverseEnergyCascade, Vortex)
  }
      
  THEORIES {
    VortexZonalFlowInteraction {
      DEFINES {
        ZonalFlow := TimeAveragedAzimuthalVelocity,
        MeridionalFlow := TimeAveragedMeridionalVelocity, 
        ThermalWindShear := VerticalShearInducedByMeridionalTemperatureGradient
      }
      
      ASSUMES {
        StrongerZonalFlowThanMeridional(AtmosphericCirculation),
        SeparationOfScales(ZonalFlow, Vortex),
        CorrelationBetween(ZonalFlow, PotentialVorticityGradient)  
      }
      
      QUESTIONS {
        HowDoVorticesModifyTheMeanZonalFlow,
        HowDoesZonalFlowShearInfluenceVortexShape,
        WhenDoVorticesActAsBarriersForZonalTransport  
      }  
    }

    DeepConvectiveGeneration {
      DEFINES {
        ConvectiveOverturning := BuoyancyDrivenVerticalMotion,  
        ConvectivePlume := LocalizedUpwardMotionDrivenByBuoyancy
      }
      
      ASSUMES {
        VaporCondensationHeating(EnergySourceForConvection),
        FastRotation(ConstraintOnConvection) 
      }
      
      QUESTIONS {
        WhatIsTheRoleOfDeepConvectionInVortexGenesis,
        HowDoesConvectionInteractWithVorticesAtDifferentScales,
        UnderWhatConditionsDoConvectivePlumesMergeIntoVortices
      }
    } 
  }
       
  IMPORTS {
    HamiltonianMechanics, LagrangianCoherence FROM FluidDynamics,  
    GeodesicMotion, ParallelTransport FROM DifferentialGeometry,
    VortexWaveMeanFlowInteraction FROM GeophysicalFluidDynamics
  }
}

EXPAND GasGiantVortexInteractions {
  EXPLORE ZonalFlow, MeridionalFlow, ThermalWindShear FROM VortexZonalFlowInteraction
  EXPLORE ConvectiveOverturning, ConvectivePlume FROM DeepConvectiveGeneration
  CONSIDER NonlinearDynamics, StochasticProcesses FOR VortexEvolution  
  RELATE (ZonalFlow, Vortex) -> Advects(ZonalFlow, Vortex) 
  RELATE (ConvectivePlume, Vortex) -> Sustains(ConvectivePlume, Vortex)
  ANALOGY (PotentialVorticityStaircase, VortexCrystal) AS 
    SelfOrganizedCriticality 
      MAPPING (PotentialVorticityMixing TO Avalanches,
               TurbulentCascade TO SandpileFormation,
               VortexFilamentation TO Fragmentation)
}  

FOCUS GasGiantVortexInteractions {
  NonlinearVortexDynamics {
    PINPOINTS {
      BaroclinicInstability, BarotropicInstability,
      PotentialVorticityStaircase, VortexCrystal,
      WaveMeanFlowInteraction, PotentialVorticityMixing,
      PolygonalVortex
    }
        
    ELABORATES {
      BaroclinicInstability WITH TiltsAndStretches(VerticalShear, PotentialVorticity),
                                ExtractsEnergyFrom(HorizontalTemperatureGradient),
      BarotropicInstability WITH ExtractsEnergyFrom(HorizontalShearFlow),
                                 FormsCounterRotating(VortexPair)
      PotentialVorticityStaircase WITH Homogenizes(TurbulentMixing, PotentialVorticity),
                                        Sharpens(InterfacialFronts, PotentialVorticityGradient)
      VortexCrystal WITH  ArrangesInto(VortexPatches, RegularLattice),
                          MaximizesDistance(NearestNeighbors, Lattice)                
    }
        
    CONNECTS {
      (BaroclinicInstability, ZonalFlow) WITH Destabilizes UNDER
        EnergyConversionCriterion(VerticalShear * MeridionalTemperatureGradient),
      (BarotropicInstability, ZonalFlow) WITH Destabilizes UNDER
        EnergyConversionCriterion(HorizontalReynoldsStress * ZonalVelocityGradient),  
      (PotentialVorticityMixing, PotentialVorticityStaircase) WITH Generates UNDER  
        EnstrophyCascadeCriterion(TurbulentStrain > PotentialVorticityGradient),
      (VortexFilamentation, VortexCrystal) WITH Arranges UNDER
        InverseEnergyCascadeCriterion(VortexInteractionEnergy > TurbulentStrain)
    } 
  }
}

CONTRACT GasGiantVortexInteractions {  
  VortexInteractionTheory {
    STRUCTURES {      
      JovianTroposphere {
        (BeltZones : PeriodicMeridionalBands,
         Circulation : HadleyCell,
         ZonalJets : ZonalVelocityProfile,
         Stratification : BruntVaisalaFrequency,  
         Convection : ConvectiveHeatFlux)   
      },
        
      PlanetaryVortex {
        (Latitude : Angle,
         Longitude : Angle,  
         Vorticity : Frequency,
         Shape : PolygonalGeometry)    
      }
    }
        
    DEFINITIONS {
      HadleyCell := AxisymmetricMeridionalOverturningCirculation,
      BruntVaisalaFrequency := SQRT(- Gravity * DLogPotentialTemperature / DZ),
      ConvectiveHeatFlux := VerticalHeatFlux(ConvectiveVelocity),
      PolygonalGeometry := ShapeDefinedByVertices((X[i], Y[i]), i = 1..N)
    }
        
    IDENTITIES {
      [ThermalWindBalance] DU/DZ = - (Gas_Constant / (Gravity * F)) * DT/DY,  
      [PotentialVorticityInversion] Streamfunction = 
        Inverse(Laplacian((PlanetaryVorticity + RelativeVorticity) / EffectiveDepth)), 
      [PotentialVorticityHomogenization] 
        MEAN(PotentialVorticity, OVER(HomogeneousRegion)) = CONSTANT,  
      [VortexInterfacialConditions]
        JUMP(TangentialVelocity) = 0, JUMP(PotentialVorticity) = SheetVorticity
    }
       
    THEOREMS {      
      THEOREM RossbyWaveMediatedInteraction {
        GIVEN PlanetaryVortices(V1, V2), 
              Separation(V1, V2) ~ DeformationRadius
        PROVE Advection(V1, V2, VIA(RossbyWave)),  
              Coalescence(V1, V2, IF(ConstructiveInterference))     
        PROOF {
          PlanetaryVortices(V1, V2) =>
            FiniteRegions(PotentialVorticityAnomaly) 
            [BY DefinitionOfVortex]
          Separation(V1, V2) ~ DeformationRadius => 
            RossbyWave(Frequency ~ PlanetaryVorticity / EffectiveDepth) 
            [BY DisperionRelation]
          ConstructiveInterference(RossbyWaves(V1), RossbyWaves(V2)) =>
            MutualAdvection(V1, V2)
            [BY AsymptoticFlowField]  
          MutualAdvection(V1, V2) AND ReducingSeparation(V1, V2) => 
            Coalescence(V1, V2)
            [BY VortexMerging]
          THEREFORE
            Advection(V1, V2, VIA(RossbyWave)) AND
            Coalescence(V1, V2, IF(ConstructiveInterference))
        }  
      }
        
      THEOREM VortexStrainInteraction {
        GIVEN PlanetaryVortex(V), 
              BackgroundStrainRate(S), 
              VortexCirculation(Gamma)  
        PROVE Deformation(V, IF(S > Gamma / (PI * Radius(V)^2))),
              Filamentation(V, IF(S > Gamma / (8 * PI)))
        PROOF {
          PlanetaryVortex(V) => FiniteRegion(PotentialVorticityAnomaly) 
            [BY DefinitionOfVortex]
          BackgroundStrainRate(S) => 
            Elongates(V, AlongStrainAxis) AND Compresses(V, AlongStrainAxis)  
            [BY KinematicsOfStrainField]
          VortexResponseToStrain(V) => Rotation(EllipticPatch, RelativeToStrainField)
            [BY KidaVortexSolution]
          Filamentation(V, WHEN(BackgroundStrain > EllipticPatchRotation))
            [BY CriticalLayer]
          Gamma / (PI * Radius(V)^2) ~ EllipticPatchRotation
          Gamma / (8 * PI) ~ CriticalLayerCriterion
          THEREFORE  
            Deformation(V, IF(S > Gamma / (PI * Radius(V)^2))) AND
            Filamentation(V, IF(S > Gamma / (8 * PI)))
        }
      }
    }
        
    CONJECTURES {
      ConvectiveSelfOrganization {  
        SUPPOSE LargeScaleConvectiveForcing(HelicityFlux), 
                FastPlanetaryRotation(CoriolisFrequency)
        CONCLUDE Generates(ConvectivePlume, HelicalVortex),
                 SelfOrganizes(HelicalVortex, PolygonalLattice)
        ARGUMENT {
          INFORMALLY 
            HelicityFlux(Troposphere) => NetTiltedConvection(Plume),
            CoriolisFrequency(Planet) => BreaksAzimuthalSymmetry(Plume),
            NetTiltedConvection(Plume) + BreaksAzimuthalSymmetry(Plume) =>
              GeneratesLocalizedCyclones(Plume),  
            RepulsiveInteraction(ConvectiveCyclones) => SettlesInto(PolygonalLattice)   
        }  
      }
    }  
        
    EXAMPLES {
      EXAMPLE HexagonalVortexCluster {
        LET Atmosphere = SaturnNorthPolarTroposphere {
              RotationRate = 1.65E-4 * SECOND^-1,
              Stratification = 1E-2 * SECOND^-1,
              ConvectiveHeatFlux = 0.25 * WATT / METER^2  
            },
            Vortex = CircumpolarCyclone {
              Longitude = (-30, -90, -150, -210, -270, -330) * DEGREE,
              Latitude = (75, 76, 75, 74, 75, 76) * DEGREE, 
              Vorticity = 5E-4 * SECOND^-1,
              Shape = HEXAGON
            }
        ASSUME DeepConvectiveDriving(Troposphere),
               GeostrophicBalance(Vortex),
               WeakVortexInteraction(ClusterDynamics) 
        EXPECT GenerationMechanism(DeepConvectiveTurbulence),
               SelfOrganization(RepulsiveVortices),  
               AngularMomentumTransfer(FROM(Troposphere), TO(PolarJet))
        SHOW VortexLattice(HexagonalSymmetry, BY(ConstructiveInterfernce)),  
             JetAcceleration(PolarJet, BY(VortexTilting + WaveFluxConvergence))
             [BY ImageVelocimetry + PotentialVorticityInversion]
      }
    }
  }
}


CONTEXT NeuronalEnsembleDynamics {
  CONCEPTS {
    Neuron, Synapse, Dendrite, Axon, Soma,  
    IonChannel, Membrane, RestingPotential, ActionPotential,  
    Neurotransmitter, Receptor, PostSynapticPotential,
    SynapticPlasticity, HebbianLearning, SpikeTimingDependentPlasticity,  
    NeuronalEnsemble, CorticalColumn, NeuralCircuit, 
    AttractionDomain, SynchronizationManifold, FiringRateVector, 
    SpikeTrainCorrelation, NeuralAssembly, CellAssembly,
    SynapticConnectivityMatrix, ConnectionWeight, TransferEntropy,
    LocalFieldPotential, SlowWave, Oscillation, PhaseAmplitudeCoupling,
    RestingStateNetwork, FunctionalConnectivity      
  }
  
  RELATIONS {
    Spikes(Neuron), 
    Synapses(Neuron1, Neuron2),
    Depolarizes(Neurotransmitter, Membrane),
    Hyperpolarizes(Neurotransmitter, Membrane),  
    Potentiates(HighFrequencyStimulus, Synapse),
    Depresses(LowFrequencyStimulus, Synapse),
    Synchronizes(SynapticCoupling, NeuronalEnsemble), 
    EncodesBySpikeTiming(Neuron, Stimulus),
    EncodesByFiringRate(NeuronalEnsemble, Stimulus),
    DetectsCoinicidentInputs(Neuron),
    BindsFeatures(NeuralAssembly),
    RoutesByConnection(NeuralCircuit, Signals)
  }  
   
  THEORIES {   
    NeuralCoding {
      DEFINES {
        FiringRateCode := StimulusEncodedByAverageSpikeCountOverTime,
        SpikeTimingCode := StimulusEncodedByPreciseTimingOfIndividualSpikes,
        PopulationCode := StimulusEncodedByJointFiringRateVectorOverNeurons  
      }
      
      ASSUMES {
        IndependentIdenticallyDistributedNeuronsInEnsemble,
        ErgodicityOfNeuronalResponse,
        SpikesAreAllOrNothingEvents
      }
      
      QUESTIONS {
        HowMuchInformationIsTransmittedBySpikingNeuron,
        WhatMakesSpikingCodeEfficientComparedToRate,
        HowDoLearningRulesAffectSpikeStatistics
      }
    }
    
    NeuralDynamics {
      DEFINES {
        AttractorState := StableFiringPatternOccupyingRestrictedRegionOfStateSpace,
        SynchronizationManifold := LimitCycleCollectiveBehaviorOfNeuronalEnsemble   
      }  
      
      ASSUMES {
        NetworkDynamicsGovernedByConnectionTopology,
        NonlinearTransferFunctionOfNeurons,  
        ActivityDependentPlasticity
      }
       
      QUESTIONS {
        WhatAreCriteriaForStabilityOfAttractorState,  
        HowDoConnectivityPatternsDetermineDynamics,  
        WhatAreManifestationsOfSynchronizationInNetworkActivity
      }
    }
  }
        
  IMPORTS {
    HodgkinHuxleyModel, IntegrateAndFireModel FROM ComputationalNeuroscience,
    GraphTheory, AlgebraicTopology FROM DiscreteMathematics,
    DynamicalSystems, BifurcationTheory FROM NonlinearScience,
    StatisticalMechanics, MaximumEntropyPrinciple FROM TheoreticalPhysics
  }
}

EXPAND NeuronalEnsembleDynamics {
  EXPLORE FiringRateCode, SpikeTimingCode, PopulationCode FROM NeuralCoding
  EXPLORE AttractorState, SynchronizationManifold FROM NeuralDynamics  
  CONSIDER StructureFunctionRelationship, InformationStorageAndTransfer FOR NeuralComputation
  RELATE (SynapticConnectivityMatrix, AttractorState) -> 
         Determines(SynapticConnectivityMatrix, AttractorState)
  RELATE (SpikeTimingDependentPlasticity, SpikeTrainCorrelation) ->
         Influences(SpikeTimingDependentPlasticity, SpikeTrainCorrelation)
  ANALOGY (NeuralAssembly, CellAssembly) AS AttractorNetworkModel
    MAPPING (NeuronFiringPattern TO CellActivityPattern,
             SynapticWeightMatrix TO AssociationMatrix,
             SynchronousFiring TO CompletionOfPattern)
}

FOCUS NeuronalEnsembleDynamics {
  EmergentComputationalProperties {
    PINPOINTS {
      SlowWave, Oscillation, PhaseAmplitudeCoupling,  
      RestingStateNetwork, FunctionalConnectivity,
      LocalFieldPotential, ConnectionWeight,
      SynapticConnectivityMatrix, TransferEntropy
    }
        
    ELABORATES {
      SlowWave WITH GlobalSynchronizationOfNeuronalEnsembles,
                    ModulationOfSpikeTimingAndFiringRate,
      Oscillation WITH PeriodicTemporalPatternOfNetworkActivity, 
                       FrequencySpecificRoutingAndGating,
      PhaseAmplitudeCoupling WITH CrossFrequencySynchronizationOfOscillations,
                                  NestingOfFastEventsInSlowWaves,
      RestingStateNetwork WITH SpontaneousEmergenceOfCoherentNeuralActivity,
                               IntrinsicFunctionalArchitectureOfConnectivity
    }
        
    CONNECTS {
      (ConnectionWeight, TransferEntropy) WITH Correlates 
        SATISFYING InformationTransferEfficiency,
      (SynapticConnectivityMatrix, RestingStateNetwork) WITH Predicts
        SATISFYING StructuralFunctionalCorrespondence,  
      (SlowWave, Oscillation) WITH Modulates
        SATISFYING CrossFrequencyCouplingOfAmplitudeAndPhase,
      (LocalFieldPotential, FunctionalConnectivity) WITH Reflects
        SATISFYING CollectiveDynamicsOfNeuronalEnsemble  
    }  
  }
}

CONTRACT NeuronalEnsembleDynamics {
  NeuralComputationTheory {
    STRUCTURES {
      CognitiveArchitecture {  
        (SensoryInput : SpatioTemporalPattern,
         MotorOutput : BehavioralSequence,
         WorkingMemory : ShortTermStorageBuffer,
         LongTermMemory : SynapticWeightMatrix,
         AttentionModulation : TopDownBiasSignal) 
      }, 
        
      NeuralRepresentation {
        (ContentFeatures : SetOfTuningProperties,
         SimilarityMetric : OverlapOfTuningProperties,
         EncodingCapacity : DimensionalityOfFeatureSpace,
         DecodingAccuracy : ErrorInReconstructedEstimate)   
      }
    }
        
    DEFINITIONS {
      SynapticWeight := StrengthOfInfluenceBetweenNeurons,
      ConnectionProbability := StatisticalLikelihoodOfSynapsesBetweenNeurons,
      ClusteringCoefficient := DensityOfTriangleMotifs / DensityOfTripleMotifs,
      SmallWorldness := AverageShortestPathLength * ClusteringCoefficient
    }
        
    IDENTITIES {
      [EnergyFunctionOfAttractor] F(V) = -Sum(W_ij * V_i * V_j) - Sum(b_i * V_i),
      [MutualInformationInPopulationCode] I(S; R) = 
        Sum(P(s) * KLDivergence(P(R|s) | P(R))),  
      [ConditionForWinnerTakeAll] Sum(W_ik) > Sum(W_jk), j != i, FORALL k, 
      [HeterogeneityFromRandomMatrix] rho(lambda) = 
        Sqrt(N) / (2 * PI * Variance(W)) * Sqrt(4 * Variance(W) - lambda^2)
    }
        
    THEOREMS {
      THEOREM SynapticWeightShapingOfAttractorLandscape {  
        GIVEN InitialStateVector(V),
              SynapticWeightMatrix(W),
              BiasVector(b)
        PROVE MinimizesEnergyFunction(F(V)), 
              ConvergesTo(StableFixedPointAttractor)
        PROOF {
          InitialStateVector(V) AND SynapticWeightMatrix(W) AND BiasVector(b) =>
            DefinedEnergyLandscape(F(V))
            [BY EnergyFunctionOfAttractor]
          GradientDescent(F(V), V) => DecreasesEnergyFunction(F(V))
            [BY GradientDescentConvergence]  
          ConvergesTo(LocalMinimumOfF(V)) => StableFixedPoint(V) 
            [BY StabilityAnalysis]
          ConnectivityShapesLandscape(W) AND ControlsConvergenceBasin(W, b) => 
            ContainsMemoryPatterns(AttractorStates)
            [BY HebbianAssociativeLearning]  
          THEREFORE 
            MinimizesEnergyFunction(F(V)) AND
            ConvergesTo(StableFixedPointAttractor)  
        }
      }
        
      THEOREM CriticalityOptimizesInformationTransfer {
        GIVEN SynapticWeight(W),
              PowerLawDistribution(SynapticStrength),
              CriticalExponent(Alpha)   
        PROVE HasCriticalConnectivity(SynapticWeightMatrix),  
              MaximizesInformationTransfer(TransferEntropy),
              EnablesLongRangeCorrelation(SlowWave)
        PROOF {
          PowerLawDistribution(SynapticStrength) => 
            ScaleFreeFractalTopology(SynapticConnectivityMatrix)
            [BY StatisticalMechanicsOfComplexNetworks]
          CriticalExponent(Alpha) AND 
            LargestEigenvalue(SynapticConnectivityMatrix) = 1 =>  
            SynapticWeightMatrixAtCriticality
            [BY PercolationTheory]
          SynapticWeightMatrixAtCriticality => 
            MaximizesInformationTransfer(TransferEntropy)
            [BY InformationGeometry]
          SynapticWeightMatrixAtCriticality => 
            EnablesLongRangeCorrelation(SlowWave)
            [BY DynamicalSystems]
        }
      }
    }
        
    CONJECTURES {
      UniversalPrinicplesOfNeuralComputation {
        SUPPOSE IntelligentBehavior(ComplexOrganisms),
                SelfOrganization(NeuronalNetworks)   
        CONCLUDE OptimizedTradeoffs(InformationProcessing),
                 EmergentPhenomena(NeuralDynamics)  
        ARGUMENT {
          INFORMALLY  
            LearningRulesOptimizeObjective(FreeEnergy),  
            NetworkPropertiesPoised(CriticalRegime),
            HierarchyOfSpatioTemporalScales(Oscillations),
            ComplexityArisesBetweenOrderAndChaos(Criticality),
            UniversalSignaturesIdentify(IntelligentSystems)
        }
      } 
    }
        
    EXAMPLES {
      EXAMPLE AssociativeMemoryRetrieval {
        LET TrainingPatternSet = [["A"], ["B"], ["A", "C"], ["B", "D", "E"]],
            TestProbe = ["A"],
            HebbianAssociationStrength = 0.2,
            DeltaRuleLearningRate = 0.8 * HebbianAssociationStrength  
        ASSUME FeedForwardConnectivity(TrainingPatternSet),
               HintonSejnowskiWeightUpdate(DeltaRuleLearningRate)
        EXPECT RetrievesCompletedPattern(["C"]),
               AttractsToNearestMemory(TrainingPatternSet)   
        SHOW StoredInWeightMatrix(TrainingPatternSet, BY(Reconstruction)),
             AssociatedWithProbe(["C"], BY(PriorAssociation)),  
             FillsInMissingDetails(["A", "C"], BY(ContentAddressableMemory))
        [BY MatrixMemoryModel, EnergyBasedModel, AttractorNetworkSimulation]
      }
        
      EXAMPLE SparseCodedCompressedSensing {
        LET ImagePatch = 32x32,
            ReceptiveFieldSize = 8x8,
            HiddenNodes = 128,  
            SparseCodingMeasurements = 64
        ASSUME 2DGaborWaveletFeatures(ReceptiveFieldTransform),
               IncoherentRandomProjections(CompressiveMeasurementMatrix),
               L1NormRegularization(ActivityCostFunction) 
        EXPECT CompressedRepresentation(ImagePatch),
               SparseDistributedEncoding(HiddenNodeActivity)
        SHOW ApproximatelyInvertible(FeatureTransform, BY(L1Reconstruction)),
             BalancesSparsityAndReconstruction(L1Regularization, BY(ParetoOptimality)),
             ExtractsStatisticalRegularities(GaborWavelets, BY(IndependentComponentAnalysis)),
             EnablesCompressedRecovery(RandomProjections, BY(RestrictedIsometry))
        [BY SparseApproximationTheory, CompressedSensingTheory, IndependentComponentAnalysis]  
      }
    }
  }  
}


CONTEXT AnimalCollectiveBehavior {
  CONCEPTS {
    Individual, Group, Interaction,  
    Position, Velocity, Acceleration,
    Alignment, Attraction, Repulsion,  
    LocalInteraction, MetricRange, TopologicalRange,
    PerceivedVelocity, PerceivedCentroid, PerceivedThreat,
    Convergence, Divergence, Bifurcation,  
    CollectiveState, OrderParameter, CorrelationLength,
    EmergentBehavior, ScalingLaw, UniversalityClass,
    SelfOrganization, CriticalPoint, PhaseDiagram
  }
  
  RELATIONS {
    Senses(Individual, LocalEnvironment),
    Influences(Individual, Neighbor),
    AlignsVelocityTo(Individual, PerceivedVelocity),  
    AttractsTo(Individual, PerceivedCentroid),
    RepelsFrom(Individual, Neighbor),
    Transmits(Individual, Information),
    DecaysWith(Interaction, Distance),
    Constrains(LocalInteraction, GlobalBehavior),
    Emerges(CollectiveState, FROM(InteractionDynamics))  
  }
   
  THEORIES {
    InteractionNetwork {
      DEFINES {
        Neighborhood := SetOfIndividualsWithinInteractionRange,
        PerceivedVelocity := AverageVelocityOfNeighbors, 
        PerceivedCentroid := AveragePositionOfNeighbors
      }
      
      ASSUMES {
        LimitedKnowledge(Individual, AboutNonNeighbors),
        HomogeneousInteractions(IndividualPairs)
      }
      
      QUESTIONS {
        WhatDeterminesTopologyOfInteractionNetwork,
        HowDoesNetworkStructureAffectInformationPropagation,
        WhatIsMinimalConnectivityForCollectiveResponse
      }  
    }
    
    SelfOrganizedCriticality {
      DEFINES {
        CriticalPoint := PointOfDivergingCorrelationLength,
        OrderParameter := GlobalMeasureOfCollectiveState,
        PhaseDiagram := MapOfSystemStateUnderVaryingParameters  
      }
      
      ASSUMES {
        UniversalScalingLaws(NearCriticalPoint),
        BalanceOfConvergentAndDivergentForces(AtCriticality)  
      }
            
      QUESTIONS {
        WhatAreUniversalFeaturesOfCriticalCollectiveDynamics,
        HowDoesSystemTuneItselfTowardsCriticality,
        IsCollectiveBehaviorMaximallyInformativeNearCriticalPoint
      }  
    }
  }
  
  IMPORTS {
    NetworkTopology, GraphLaplacian FROM GraphTheory,
    StatisticalFieldTheory, RenormalizationGroup FROM StatisticalPhysics,
    DynamicalSystems, BifurcationTheory FROM NonlinearDynamics, 
    MultiAgentSystems, DecentralizedControl FROM ControlTheory
  }
}
 
EXPAND AnimalCollectiveBehavior {
  EXPLORE Alignment, Attraction, Repulsion FROM InteractionNetwork
  EXPLORE CriticalPoint, OrderParameter, PhaseDiagram FROM SelfOrganizedCriticality
  CONSIDER LongRangeCorrelation, ScaleInvariantFeature FOR EmergentBehavior
  RELATE (LocalInteraction, GlobalBehavior) -> Constrains(LocalInteraction, GlobalBehavior)
  RELATE (InteractionDynamics, CollectiveState) -> Emerges(CollectiveState, FROM(InteractionDynamics))  
  ANALOGY (AnimalGroup, MagneticDipole) AS PolarizedCollective
    MAPPING (Velocity TO Spin, Alignment TO Magnetization,
             Disorder TO Temperature)
}

FOCUS AnimalCollectiveBehavior {
  UniversalFeatures {
    PINPOINTS {
      OrderParameter, CorrelationLength,  
      ScalingLaw, UniversalityClass,
      CriticalPoint, PhaseDiagram
    }
        
    ELABORATES {
      OrderParameter WITH GlobalMeasureOfAlignment, AveragePolarization,
      CorrelationLength WITH DecayLengthOfSpatialCorrelations, CoherenceLength,
      ScalingLaw WITH PowerLawRelationNearCriticalPoint, UniversalExponent,
      CriticalPoint WITH DivergingCorrelationLength, VanishingOrderParameter,
      PhaseDiagram WITH CollectiveStateUnderParameterVariation, BistabilityRegion 
    }
        
    CONNECTS {
      (Alignment, OrderParameter) WITH Increases UNDER
        CollectiveMagnification(LocalPolarization),
      (Divergence, CorrelationLength) WITH Increases UNDER
        SlowingDownOfRelaxation(NearCriticalPoint),  
      (CriticalPoint, ScalingLaw) WITH Determines UNDER 
        RenormalizationGroupTransformation(SystemHamiltonian) 
    }
  }
}

CONTRACT AnimalCollectiveBehavior {
  MinimalModelOfFlocking {
    STRUCTURES {
      SwarmOfParticles {
        (Position[i] : Vector,  
         Velocity[i] : Vector,
         Interaction(d) : Function)
        [FOR EACH Particle i FROM 1 TO N]
      }
    }
    
    DYNAMICS {
      DPosition[i]/DT = Velocity[i],
      DVelocity[i]/DT = SUM(Interaction(Distance[i,j])) * Velocity[j] / N 
        [FOR EACH Particle j != i IN Neighborhood(i)]
    }
     
    DEFINITIONS {  
      Neighborhood(i) := {j | Distance[i,j] < InteractionRange},
      Interaction(d) := Attraction(d) + Repulsion(d) + Alignment(d),
      Attraction(d) := Min((d - AttractRadius) / (AlignRadius - AttractRadius), 1), 
      Repulsion(d) := Max((RepulseRange - d) / RepulseRange, 0),
      Alignment(d) := (d < AlignRadius) ? 1 : 0,
      CorrelationLength := AverageDistanceOverWhichVelocitiesAlign,
      OrderParameter := SUM(Velocity[i]) / SUM(Norm(Velocity[i])),
      Polarization := AverageOfNormalizedVelocities
    }
    
    IDENTITIES {
      [ScalingOfCorrelationLength] CorrelationLength ~ Absolute(CouplingStrength - CriticalPoint)^(-Nu),
      [ScalingOfOrderParameter] OrderParameter ~ Absolute(CouplingStrength - CriticalPoint)^Beta,  
      [RelationOfExponents] (CorrelationExponent Nu) * (DimensionOfSpace D) =
        2 - (OrderExponent Beta) - (SusceptibilityExponent Gamma)
    }
      
    THEOREMS {
      THEOREM PhaseTransitionInFlockingBehavior {
        GIVEN CouplingStrength(Interaction),
              Noise(PerceptualError)  
        PROVE TransitionsFrom(Disorder, TO(Order), 
                              AsCouplingStrengthIncreases(CriticalPoint),
                              AsNoiseDecreases(BelowThreshold))
        PROOF {
          CouplingStrength(Interaction) DETERMINES PolarizationTendency(Flock)
            [BY DefinitionOfOrderParameter]
          Noise(PerceptualError) DETERMINES DepolarizationTendency(Flock)  
            [BY RandomWalkOfPolarization]
          PolarizationTendency(Flock) COMPETES WITH DepolarizationTendency(Flock)
            [BY CompetitionOfTimescales]
          TransitionAt(CouplingStrength = CriticalPoint) AND
          TransitionAt(Noise = NoiseThreshold)
            [BY BifurcationOfFixedPoints(OrderParameter)]
          THEREFORE 
            TransitionsFrom(Disorder, TO(Order),
                            AsCouplingStrengthIncreases(CriticalPoint),
                            AsNoiseDecreases(BelowThreshold))
        }
      }
    }

    CONJECTURES {
      CriticalFlockingHypothesis {  
        SUPPOSE PerceivedThreat(Predator), 
                MinimizesFitnessCost(ParameterTuning)
        CONCLUDE FlockTunesTo(CriticalPoint),
                 ExhibitsMaximalResponse(UnderAttack),
                 RecoversHigh(CollectiveSpeed, AfterAttack)
        ARGUMENT {
          INFORMALLY
            FlockNearCriticality(HAS(DivergingCorrelationLength) AND
                                 HAS(VanishingReactionTime)) 
            =>
            PropagatesInformationOptimally(FlockUnderAttack) AND 
            SelfCorrelatingSpatiotemporalVelocity(FlockEscaping)  
            =>
            MinimizesCasualties(ToPredation) AND
            MaximizesEscapeSpeed(FromThreat)
            
            EVOLVES(SelectionPressure, FlockingBehavior, TowardsCriticality)
        }
      }
    }
        
    EXAMPLES {
      EXAMPLE BirdFlockingSimulation {
        LET Flock = StarlingsInRome {
              Population = 1000,
              InteractionRange = 100 * METER,
              AlignmentStrength = 1.0 * DIMENSIONLESS,
              AttractionStrength = 1.0 * DIMENSIONLESS,
              RepulsionStrength = 2.0 * DIMENSIONLESS
            }
        ASSUME NoObstacles(Environment),
               NoExternalPerturbation(Flock),
               HomogeneousInteractions(Individuals)   
        EXPECT SpontaneousAlignment(Velocities),
               EmergenceOfCorrelations(OverLargeDistances),
               PowerLawScaling(OfCorrelations, NearCriticalPoint)
        SHOW OrderParameterDistribution(IsBimodal, OverLongTimes) 
             [BY EulerianIntegration(EquationOfMotion)],
             CorrelationLengthDiverges(AsCouplingConstantApproaches(CriticalPoint))
             [BY FiniteSizeScaling(StatisticsOverEnsembles)]
      }
    }
  }
}