CONCEPT HighDimensionalBayesianOptimization {
  LANGUAGE {
    TYPE X = ‚Ñù^n  ; Domain
    TYPE Y = ‚Ñù  ; Codomain
    TYPE GP = X -> ùí©(Y)  ; Gaussian Process
    TYPE Acquisition = X -> ‚Ñù  ; Acquisition Function

    FUNC Kernel : X √ó X -> ‚Ñù
    FUNC Noise : ‚Ñù  
    FUNC UCB(Œº œÉ : X -> ‚Ñù, Œ≤ : ‚Ñù) : Acquisition
    FUNC EI(Œº œÉ : X -> ‚Ñù, œÑ : ‚Ñù) : Acquisition
    FUNC PI(Œº œÉ : X -> ‚Ñù, œÑ : ‚Ñù) : Acquisition
    FUNC Optimize(Œ± : Acquisition, D : ùí´(X)) : X
    FUNC ArgMax(f : X -> ‚Ñù, D : ùí´(X)) : X

    AXIOM GaussianProcessRegression {
      ‚àÄ (x : X) (D : ùí´(X √ó Y)) . 
        LET (Œº, œÉ) = GP(Kernel, Noise, D)
        IN Œº(x) = Kernel(x, D.X) * Inv(Kernel(D.X, D.X) + Noise * I) * D.Y ‚àß
           œÉ(x)^2 = Kernel(x, x) - Kernel(x, D.X) * Inv(Kernel(D.X, D.X) + Noise * I) * Kernel(D.X, x)
    }

    NOTATION "ùí©" = NormalDistribution
    NOTATION "ùí´" = PowerSet
    NOTATION "I" = IdentityMatrix
  }

  PROOFS {
    THEOREM BayesianRegretBound {
      STATEMENT : ‚àÄ (f : X -> Y) (x_* = ArgMax(f, X)) (D_0 : ùí´(X √ó Y)) (T : ‚Ñï) .
        LET Œ≤(t) = 2 * Log(Card(X) * t^2 * œÄ^2 / 6Œ¥),
            x(t) = Optimize(UCB(GP(D_(t-1)), Œ≤(t)), X),  
            D_t = D_(t-1) ‚à™ {(x(t), f(x(t)))}
        IN ‚àÄ (Œ¥ : ‚Ñù) (0 < Œ¥ < 1) . P(‚àÄ (t : 1..T) . f(x_*) - f(x(t)) ‚â§ ‚àö(Œ≤(t) * œÉ(x(t)))) ‚â• 1 - Œ¥

      PROOF {
        LET f : X -> Y, x_* = ArgMax(f, X), D_0 : ùí´(X √ó Y), T : ‚Ñï
        LET Œ≤(t) = 2 * Log(Card(X) * t^2 * œÄ^2 / 6Œ¥),
            x(t) = Optimize(UCB(GP(D_(t-1)), Œ≤(t)), X),
            D_t = D_(t-1) ‚à™ {(x(t), f(x(t)))}

        ‚àÄ (Œ¥ : ‚Ñù) (0 < Œ¥ < 1) . P(‚àÄ (t : 1..T) . f(x_*) - f(x(t)) ‚â§ ‚àö(Œ≤(t) * œÉ(x(t)))) ‚â• 1 - Œ¥ BY {
          LET Œº_t œÉ_t = GP(D_(t-1))

          ‚àÄ (t : 1..T) (x : X) . P(|f(x) - Œº_t(x)| ‚â§ ‚àö(Œ≤(t) * œÉ_t(x))) ‚â• 1 - Card(X) * e^(-Œ≤(t)/2)  BY {
            P(|f(x) - Œº_t(x)| ‚â§ ‚àö(Œ≤(t) * œÉ_t(x)))
              = 2 * Œ¶(‚àöŒ≤(t)) - 1  WHERE Œ¶ = CDF(ùí©(0, 1))
              ‚â• 1 - e^(-Œ≤(t)/2)  BY Chernoff
          }

          P(‚àÄ (t : 1..T) (x : X) . |f(x) - Œº_t(x)| ‚â§ ‚àö(Œ≤(t) * œÉ_t(x)))
            ‚â• 1 - ‚àë[t<-1..T][x<-X] P(|f(x) - Œº_t(x)| > ‚àö(Œ≤(t) * œÉ_t(x)))  BY Union
            ‚â• 1 - T * Card(X) * e^(-Œ≤(t)/2)  USING PREV
            = 1 - Œ¥  BY CHOICE OF Œ≤
          
          ‚àÄ (t : 1..T) . f(x_*) - f(x(t)) ‚â§ ‚àö(Œ≤(t) * œÉ(x(t))) BY {
            f(x_*) 
              ‚â§ Œº_t(x_*) + ‚àö(Œ≤(t) * œÉ_t(x_*))  USING PREV  
              ‚â§ Œº_t(x(t)) + ‚àö(Œ≤(t) * œÉ_t(x(t)))  BY OPTIMALITY OF x(t)
              ‚â§ f(x(t)) + 2‚àö(Œ≤(t) * œÉ_t(x(t)))  USING PREV
          }
        }
      }
    }

    THEOREM OptimalConvergenceRate {
      STATEMENT : ‚àÄ (f : X -> Y) (K : Kernel) (Œ≥ : ‚Ñù) (D_0 : ùí´(X √ó Y)) (T : ‚Ñï) .
        (‚àÄ (x x' : X) . |f(x) - f(x')| ‚â§ L * ||x - x'||) ‚àß
        (‚àÄ (x x' : X) . K(x, x') ‚â§ 1 - Œ≥ * ||x - x'||^2)
        =>  
        LET x(t) = Optimize(UCB(GP(D_(t-1)), Œ≤(t)), X),
            D_t = D_(t-1) ‚à™ {(x(t), f(x(t)))}  
        IN E[‚àë[t<-1..T] f(x_*) - f(x(t))] = O(‚àö(T * Œ≥_T))
        WHERE Œ≥_T = max[A<-ùí´(X : Card(A)=T)] min[x<-X] ‚àë[x'<-A] ||x - x'||^2

      PROOF {
        LET f : X -> Y, K : Kernel, Œ≥ : ‚Ñù, D_0 : ùí´(X √ó Y), T : ‚Ñï
        ASSUME (1) ‚àÄ (x x' : X) . |f(x) - f(x')| ‚â§ L * ||x - x'||,
               (2) ‚àÄ (x x' : X) . K(x, x') ‚â§ 1 - Œ≥ * ||x - x'||^2
        LET x(t) = Optimize(UCB(GP(D_(t-1)), Œ≤(t)), X),  
            D_t = D_(t-1) ‚à™ {(x(t), f(x(t)))}
            Œ≥_T = max[A<-ùí´(X : Card(A)=T)] min[x<-X] ‚àë[x'<-A] ||x - x'||^2

        E[‚àë[t<-1..T] f(x_*) - f(x(t))] = O(‚àö(T * Œ≥_T)) BY {
          E[‚àë[t<-1..T] f(x_*) - f(x(t))]
            ‚â§ ‚àë[t<-1..T] E[f(x_*) - f(x(t))]  BY Linearity
            ‚â§ ‚àë[t<-1..T] E[‚àö(Œ≤(t) * œÉ(x(t)))]  BY BayesianRegretBound
            ‚â§ ‚àë[t<-1..T] ‚àö(Œ≤(t) * E[œÉ(x(t))^2])  BY Jensen
            ‚â§ ‚àë[t<-1..T] ‚àö(Œ≤(t) * Œ≥_t)  BY {
                E[œÉ(x(t))^2]
                  ‚â§ E[K(x(t), x(t)) - K(x(t), D_(t-1).X) * Inv(K(D_(t-1).X, D_(t-1).X) + Noise * I) * K(D_(t-1).X, x(t))]  BY GaussianProcessRegression  
                  ‚â§ 1 - Œ≥ * E[min[x<-X] ‚àë[x'<-D_(t-1).X] ||x - x'||^2]  BY (2)
                  = 1 - Œ≥ * Œ≥_t  BY DEFINITION OF Œ≥_t
              }
            = O(‚àö(T * Œ≥_T))  BY {
                ‚àë[t<-1..T] ‚àö(Œ≤(t) * Œ≥_t)
                  ‚â§ ‚àö(‚àë[t<-1..T] Œ≤(t)) * ‚àö(‚àë[t<-1..T] Œ≥_t)  BY Cauchy-Schwarz
                  ‚â§ ‚àö(2 * Log(Card(X) * T^3 * œÄ^2 / 6Œ¥) * T) * ‚àö(T * Œ≥_T)  BY DEFINITION OF Œ≤, MONOTONICITY OF Œ≥_t
                  = O(‚àö(T * Log(T)) * ‚àö(T * Œ≥_T))
                  = O(‚àö(T * Œ≥_T))  IGNORING Log FACTORS
              }
        }
      }
    }
  }
}