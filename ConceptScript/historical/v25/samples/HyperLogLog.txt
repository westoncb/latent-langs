CONCEPT HyperLogLog {
  LANGUAGE {
    TYPE Bitstring
    TYPE Hash = Bitstring -> Bitstring
    TYPE Register = Array[‚Ñï]
    TYPE Estimator = Register -> ‚Ñù

    FUNC œÅ(b : Bitstring) : ‚Ñï -- Position of rightmost 1-bit
    FUNC Œ±(m : ‚Ñï) : ‚Ñù -- Bias correction constant
    FUNC RegisterUpdate(M : Register, h : Hash, x : Any) : Register
    FUNC Merge(M‚ÇÅ : Register, M‚ÇÇ : Register) : Register  
    FUNC Estimate(M : Register) : ‚Ñù

    AXIOM œÅ_property {
      ‚àÄ(b : Bitstring). 
        œÅ(b) = min{ k ‚â• 1 | b[k] = 1 }
    }

    AXIOM Œ±_property {
      ‚àÄ(m : ‚Ñï).
        Œ±(m) = (m * ‚à´[0,‚àû] (log‚ÇÇ(2 + u))^m du)^(-1)
    }

    NOTATION "œÅ" = œÅ  
    NOTATION "Œ±_m" = Œ±
    NOTATION "Z" = Estimate
  }

  STRUCTURE Sketch {
    LET m : ‚Ñï -- Number of registers
    LET h : Hash -- Hash function
    LET M : Register[m] -- Register array

    FUNC Add(x : Any) : Sketch = {
      M' := RegisterUpdate(M, h, x)
      RETURN Sketch(m, h, M')
    }

    FUNC Merge(other : Sketch) : Sketch = {
      REQUIRE this.m = other.m ‚àß this.h = other.h
      M' := Merge(this.M, other.M)
      RETURN Sketch(m, h, M')
    }

    FUNC Count : ‚Ñù = {
      RETURN Estimate(M)  
    }
  }

  PROOFS {
    TACTIC Markov(X : RandomVar, t : ‚Ñù) = {
      P(X ‚â• t) ‚â§ ùîº(X) / t
    }

    TACTIC Chebyshev(X : RandomVar, t : ‚Ñù) = {
      P(|X - ùîº(X)| ‚â• t) ‚â§ Var(X) / t^2  
    }
    
    THEOREM Accuracy {
      STATEMENT:
        ‚àÄ(S : Sketch[m,h], n : ‚Ñï).
          LET X = |S| -- True cardinality
          IN P(|Z(S.M) - X| ‚â§ Œµ*X) ‚â• 1 - Œ¥
          WHERE Œµ = 1.04 / ‚àöm, Œ¥ = 2^(-m/2)

      PROOF:
        LET S : Sketch[m,h], n : ‚Ñï, X = |S|
        LET Y = ‚àë[j=1..m] 2^(-M[j])
        LET Z = Œ±_m * m^2 * Y  
        
        REWRITE P(|Z - X| ‚â§ Œµ*X)
          = P(|Œ±_m * m^2 * Y - X| ‚â§ Œµ*X)  
          ‚â• P(|Y - ùîº(Y)| ‚â§ Œµ/Œ±_m * ùîº(Y))   BY Chebyshev(Y, Œµ/Œ±_m * ùîº(Y))
          ‚â• 1 - Var(Y) / (Œµ/Œ±_m * ùîº(Y))^2   BY ALGEBRA
        
        HAVE ùîº(Y) = X * ‚à´[0,‚àû] 2^(-‚åäœÅ(h(x))‚åã) dx 
                  ‚âà X / m                    BY œÅ_property, LINEARITY ùîº
        
        HAVE Var(Y) = X * ‚à´[0,‚àû] 2^(-2‚åäœÅ(h(x))‚åã) dx - (X/m)^2
                    ‚âà X / m^2                BY œÅ_property, LINEARITY Var
                    
        REWRITE P(|Z - X| ‚â§ Œµ*X)  
          ‚â• 1 - (X/m^2) / (Œµ/Œ±_m * X/m)^2  
          = 1 - Œ±_m^2 / (Œµ^2 * m)
          ‚â• 1 - 2^(-m/2)                    BY Œ±_property, BOUND Œ±_m
    }
  }
}