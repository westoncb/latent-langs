CONCEPT IncrementalLearning {

  LANGUAGE {
    TYPE Example = РЪеx: Vector[n], y: LabelРЪЕ
    TYPE Hypothesis = Vector[n] -> Label
    TYPE Loss = Label -> Label -> РёЮРЂ║
    TYPE Regret = РёЮРЂ║
    
    FUNC Predict(h: Hypothesis, x: Vector[n]) -> Label
    FUNC Update(h: Hypothesis, ­ЮњЪ: ­ЮњФ(Example)) -> Hypothesis
    FUNC EmpiricalRisk(h: Hypothesis, ­ЮњЪ: ­ЮњФ(Example), L: Loss) -> РёЮРЂ║
    
    PRED Realizable(­ЮњЪ: ­ЮњФ(Example), ­ЮЊЌ: ­ЮњФ(Hypothesis)) <->
      РѕЃ h* Рѕѕ ­ЮЊЌ: Рѕђ РЪеx, yРЪЕ Рѕѕ ­ЮњЪ. Predict(h*, x) = y
      
    NOTATION "­Юњф(┬и)" = AsymptoticUpperBound
    NOTATION "РїѕxРїЅ" = Ceil(x)
  }
  
  STRUCTURE {
    DEF Realizable(­ЮњЪ: ­ЮњФ(Example), ­ЮЊЌ: ­ЮњФ(Hypothesis)) =
      РѕЃ h* Рѕѕ ­ЮЊЌ: Рѕђ РЪеx, yРЪЕ Рѕѕ ­ЮњЪ. h*(x) = y
      
    DEF EmpiricalRisk(h: Hypothesis, ­ЮњЪ: ­ЮњФ(Example), L: Loss) = 
      РѕЉ РЪеx, yРЪЕ Рѕѕ ­ЮњЪ: L(h(x), y) / |­ЮњЪ|
      
    DEF Mistake[L](h: Hypothesis, РЪеx, yРЪЕ: Example) <->
      L(h(x), y) > 0
      
    DEF WeightedMajority(­ЮЊЌ: ­ЮњФ(Hypothesis), w: Vector[|­ЮЊЌ|], x: Vector[n]) =
      LET p = РѕЉ i Рѕѕ ­ЮЊЌ. wрхб ┬и ­ЮЪЎ[Predict(hрхб, x) = 1] / РѕЉ i Рѕѕ ­ЮЊЌ. wрхб IN 
        IF p РЅЦ 1/2 THEN 1 ELSE 0
        
    DEF UpdateWeights(­ЮЊЌ: ­ЮњФ(Hypothesis), w: Vector[|­ЮЊЌ|], РЪеx, yРЪЕ: Example, ╬и: РёЮРЂ║) =
      [IF Mistake[ZeroOneLoss](hрхб, РЪеx, yРЪЕ) THEN wрхб ┬и e^(-╬и) ELSE wрхб for i Рѕѕ ­ЮЊЌ]
  }
  
  PROOFS {
    THEOREM WMRegretBound[n] {
      STATEMENT:
        Рѕђ (­ЮњЪ: [Example]^T) (­ЮЊЌ: ­ЮњФ(Hypothesis)[n]) (╬и : РёЮРЂ║).
          Realizable(­ЮњЪ, ­ЮЊЌ) ->
          РѕЉ t РЅц T: Mistake[ZeroOneLoss](WeightedMajority(­ЮЊЌ, wрхЌ, xрхЌ), РЪеxрхЌ, yрхЌРЪЕ)
            РЅц Рїѕ(╬и + ln(n))/╬иРїЅ ┬и OPT(­ЮњЪ, ­ЮЊЌ)
        WHERE 
          wрхЌ = [1 / n for i Рѕѕ ­ЮЊЌ] for t = 1,
          wрхЌ = UpdateWeights(­ЮЊЌ, wрхЌРЂ╗┬╣, РЪеxрхЌРЂ╗┬╣, yрхЌРЂ╗┬╣РЪЕ, ╬и) for t > 1,
          OPT(­ЮњЪ, ­ЮЊЌ) = min h Рѕѕ ­ЮЊЌ: РѕЉ t РЅц T: Mistake[ZeroOneLoss](h, РЪеxрхЌ, yрхЌРЪЕ)
          
      PROOF {
        ASSUME [­ЮњЪ: [Example]^T] [­ЮЊЌ: ­ЮњФ(Hypothesis)[n]] [╬и: РёЮРЂ║]:
          Realizable(­ЮњЪ, ­ЮЊЌ)
          
        LET h* Рѕѕ ­ЮЊЌ SUCH THAT Рѕђ РЪеx, yРЪЕ Рѕѕ ­ЮњЪ. h*(x) = y
        LET M = РѕЉ t РЅц T: Mistake[ZeroOneLoss](WeightedMajority(­ЮЊЌ, wрхЌ, xрхЌ), РЪеxрхЌ, yрхЌРЪЕ)
        
        HAVE Bound1: Рѕђ t РЅц T. РѕЉ i Рѕѕ ­ЮЊЌ. wрхЌРЂйРЂ▒РЂЙ РЅц n ┬и e^(╬и ┬и M - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ)) BY {
          INDUCE ON t:
            BASE CASE t = 1:
              РѕЉ i Рѕѕ ­ЮЊЌ. w┬╣РЂйРЂ▒РЂЙ = n ┬и (1/n) = 1 РЅц n ┬и e^(╬и ┬и 0 - ╬и ┬и 0) = n
            INDUCTIVE CASE t > 1:
              ASSUME: РѕЉ i Рѕѕ ­ЮЊЌ. wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ РЅц n ┬и e^(╬и ┬и MрхЌРЂ╗┬╣ - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌРЂ╗┬╣, yрхЌРЂ╗┬╣РЪЕ))
              LET mрхЌ = РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ)
              HAVE: РѕЉ i Рѕѕ ­ЮЊЌ. wрхЌРЂйРЂ▒РЂЙ 
                = РѕЉ i Рѕѕ ­ЮЊЌ. IF Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ) THEN wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ ┬и e^(-╬и) ELSE wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ 
                = e^(-╬и) ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ). wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ + РѕЉ i Рѕѕ ­ЮЊЌ: ┬гMistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ). wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ
                РЅц e^(-╬и) ┬и РѕЉ i Рѕѕ ­ЮЊЌ. wрхЌРЂ╗┬╣РЂйРЂ▒РЂЙ
                РЅц e^(-╬и) ┬и n ┬и e^(╬и ┬и MрхЌРЂ╗┬╣ - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌРЂ╗┬╣, yрхЌРЂ╗┬╣РЪЕ)) BY ASSUMPTION  
                = n ┬и e^(╬и ┬и (MрхЌРЂ╗┬╣ + 1 - mрхЌ) - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌРЂ╗┬╣, yрхЌРЂ╗┬╣РЪЕ))
                = n ┬и e^(╬и ┬и MрхЌ - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ))
        }
        
        HAVE Bound2: Рѕђ t РЅц T. wрхЌРЂй*РЂЙ РЅЦ e^(-╬и ┬и РѕЉ t' РЅц t: Mistake[ZeroOneLoss](h*, РЪеxрхЌ', yрхЌ'РЪЕ)) / n BY {
          INDUCE ON t:
            BASE CASE t = 1:
              w┬╣РЂй*РЂЙ = 1/n = e^(0) / n РЅЦ e^(-╬и ┬и 0) / n
            INDUCTIVE CASE t > 1:
              ASSUME: wрхЌРЂ╗┬╣РЂй*РЂЙ РЅЦ e^(-╬и ┬и РѕЉ t' РЅц t-1: Mistake[ZeroOneLoss](h*, РЪеxрхЌ', yрхЌ'РЪЕ)) / n
              HAVE: wрхЌРЂй*РЂЙ = IF Mistake[ZeroOneLoss](h*, РЪеxрхЌ, yрхЌРЪЕ) THEN wрхЌРЂ╗┬╣РЂй*РЂЙ ┬и e^(-╬и) ELSE wрхЌРЂ╗┬╣РЂй*РЂЙ
                РЅЦ e^(-╬и ┬и РѕЉ t' РЅц t-1: Mistake[ZeroOneLoss](h*, РЪеxрхЌ', yрхЌ'РЪЕ)) / n ┬и e^(-╬и ┬и Mistake[ZeroOneLoss](h*, РЪеxрхЌ, yрхЌРЪЕ))
                = e^(-╬и ┬и РѕЉ t' РЅц t: Mistake[ZeroOneLoss](h*, РЪеxрхЌ', yрхЌ'РЪЕ)) / n
        }
        
        HAVE: Рѕђ t РЅц T. e^(-╬и ┬и РѕЉ t' РЅц t: Mistake[ZeroOneLoss](h*, РЪеxрхЌ', yрхЌ'РЪЕ)) / n РЅц n ┬и e^(╬и ┬и M - ╬и ┬и РѕЉ i Рѕѕ ­ЮЊЌ: Mistake[ZeroOneLoss](hрхб, РЪеxрхЌ, yрхЌРЪЕ)) BY {
          Bound2, Bound1, wрхЌРЂй*РЂЙ РЅц РѕЉ i Рѕѕ ­ЮЊЌ. wрхЌРЂйРЂ▒РЂЙ
        }
        
        HENCE: e^(-╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ)) / n РЅц n ┬и e^(╬и ┬и M - ╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ))
        
        HENCE: ln(n) - ╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ) РЅц ln(n) + ╬и ┬и M - ╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ)
        
        HENCE: ╬и ┬и M РЅц ╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ) + ln(n)
        
        HENCE: M РЅц Рїѕ(╬и ┬и OPT(­ЮњЪ, ­ЮЊЌ) + ln(n)) / ╬иРїЅ
               РЅц Рїѕ(╬и + ln(n)) / ╬иРїЅ ┬и OPT(­ЮњЪ, ­ЮЊЌ) 
               
        SHOW: РѕЉ t РЅц T: Mistake[ZeroOneLoss](WeightedMajority(­ЮЊЌ, wрхЌ, xрхЌ), РЪеxрхЌ, yрхЌРЪЕ) РЅц Рїѕ(╬и + ln(n)) / ╬иРїЅ ┬и OPT(­ЮњЪ, ­ЮЊЌ)
      }
    }
    
    THEOREM OnlineToBatchConversion[n] {
      STATEMENT:
        Рѕђ (­ЮњЪ: ­ЮњФ(Example)) (­ЮЊЌ: ­ЮњФ(Hypothesis)[n]) (A: IncrementalLearner) (m : РёЋ) (╬┤ : РёЮРЂ║).
          Realizable(­ЮњЪ, ­ЮЊЌ) РѕД RegretBound(A, ­ЮњЪ, ­ЮЊЌ, m) РЅц ╬▒┬иm + ╬▓ ->
          РёЎ_{S Рѕ╝ ­ЮњЪ^m} [EmpiricalRisk(A(S), ­ЮњЪ, ZeroOneLoss) РЅц ╬▒ + Рѕџ(ln(2/╬┤)/(2m))] РЅЦ 1 - ╬┤
        WHERE
          A(S) = LAST (MAP (A.Update, SCAN (A.Predict, A.hРѓђ, S)))
          RegretBound(A, ­ЮњЪ, ­ЮЊЌ, m) = max S Рѕѕ ­ЮњЪ^m: РѕЉ t РЅц m: Mistake[ZeroOneLoss](A.Predict(SрхЌРѓІРѓЂ), SрхЌ) - OPT(S, ­ЮЊЌ)
          
      PROOF {
        ASSUME [­ЮњЪ: ­ЮњФ(Example)] [­ЮЊЌ: ­ЮњФ(Hypothesis)[n]] [A: IncrementalLearner] [m: РёЋ] [╬┤: РёЮРЂ║]:
          Realizable(­ЮњЪ, ­ЮЊЌ),
          RegretBound(A, ­ЮњЪ, ­ЮЊЌ, m) РЅц ╬▒┬иm + ╬▓
        
        LET S Рѕ╝ ­ЮњЪ^m  
        LET h = A(S)
        LET M(S) = РѕЉ t РЅц m: Mistake[ZeroOneLoss](A.Predict(SрхЌРѓІРѓЂ), SрхЌ)
        
        HAVE: ­Юћ╝[M(S)] РЅц ╬▒┬иm + ╬▓ BY {
          ­Юћ╝[M(S)] 
            = ­Юћ╝[РѕЉ t РЅц m: Mistake[ZeroOneLoss](A.Predict(SрхЌРѓІРѓЂ), SрхЌ)
            ]
            РЅц ­Юћ╝[OPT(S, ­ЮЊЌ) + ╬▒┬иm + ╬▓] BY RegretBound
            = ­Юћ╝[OPT(S, ­ЮЊЌ)] + ╬▒┬иm + ╬▓
            РЅц ╬▒┬иm + ╬▓ BECAUSE ­Юћ╝[OPT(S, ­ЮЊЌ)] = 0 BY Realizable
        }

        HAVE: РёЎ[M(S) РЅЦ ­Юћ╝[M(S)] + m┬и╬х] РЅц e^(-2┬иm┬и╬х┬▓) BY Hoeffding {
          M(S) = РѕЉ t РЅц m: Mistake[ZeroOneLoss](A.Predict(SрхЌРѓІРѓЂ), SрхЌ) Рѕѕ [0, m]
        }

        CHOOSE ╬х = Рѕџ(ln(2/╬┤)/(2m))

        HENCE: РёЎ[M(S) РЅЦ ╬▒┬иm + ╬▓ + m┬иРѕџ(ln(2/╬┤)/(2m))] РЅц ╬┤/2

        HAVE: EmpiricalRisk(h, ­ЮњЪ, ZeroOneLoss) = ­Юћ╝_{РЪеx, yРЪЕ Рѕ╝ ­ЮњЪ}[ZeroOneLoss(h(x), y)]
          = ­Юћ╝_{РЪеx, yРЪЕ Рѕ╝ ­ЮњЪ}[Mistake[ZeroOneLoss](h, РЪеx, yРЪЕ)]
          РЅц ­Юћ╝_{S' Рѕ╝ ­ЮњЪ^m}[M(S')/m] + Рѕџ(ln(2/╬┤)/(2m)) BY {
            Hoeffding {
              РёЎ_{РЪеx, yРЪЕ Рѕ╝ ­ЮњЪ}[Mistake[ZeroOneLoss](h, РЪеx, yРЪЕ)] Рѕѕ [0, 1]  
            },
            M(S')/m IS AN UNBIASED ESTIMATE OF РёЎ_{РЪеx, yРЪЕ Рѕ╝ ­ЮњЪ}[Mistake[ZeroOneLoss](h, РЪеx, yРЪЕ)]
          }
          РЅц ╬▒ + Рѕџ(ln(2/╬┤)/(2m)) + Рѕџ(ln(2/╬┤)/(2m))
          = ╬▒ + Рѕџ(2┬иln(2/╬┤)/m)

        SHOW: РёЎ[EmpiricalRisk(h, ­ЮњЪ, ZeroOneLoss) РЅц ╬▒ + Рѕџ(2┬иln(2/╬┤)/m)] РЅЦ 1 - ╬┤ BY {
          РёЎ[EmpiricalRisk(h, ­ЮњЪ, ZeroOneLoss) > ╬▒ + Рѕџ(2┬иln(2/╬┤)/m)]
            РЅц РёЎ[M(S)/m > ╬▒ + Рѕџ(ln(2/╬┤)/(2m))] + РёЎ[­Юћ╝_{S' Рѕ╝ ­ЮњЪ^m}[M(S')/m] > M(S)/m + Рѕџ(ln(2/╬┤)/(2m))]
            РЅц ╬┤/2 + ╬┤/2 = ╬┤
        }
      }
    }
  }
}