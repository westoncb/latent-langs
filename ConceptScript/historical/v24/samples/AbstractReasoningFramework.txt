CONCEPT AbstractReasoningFramework {
  LANGUAGE {
    ; Reasoning system components
    TYPE ReasoningSystem = Language × InferenceRules × Theorems × Proofs

    ; Language, inference rules, theorems, and proofs 
    TYPE Language
    TYPE InferenceRules = Set(Language)
    TYPE Theorems = Set(Language)
    TYPE Proofs = Language × Theorems

    ; Semantic interpretation, logical entailment, and proof checking
    FUNC ⟦_⟧: Language -> Model
    PRED ⊢ : Set(Language) × Language -> Bool
    PRED ⊨ : Proofs × Language -> Bool

    ; Abstraction, refinement, and interpretation functors
    FUNC α{S, A}: ReasoningSystem -> A
    FUNC ρ{A, S}: A -> ReasoningSystem
    FUNC ι{S₁, S₂}: ReasoningSystem -> ReasoningSystem
    
    ; Logical connectives, quantifiers, and proof tactics  
    FUNC (∧) : Language × Language -> Language
    FUNC (∨) : Language × Language -> Language
    FUNC (¬) : Language -> Language
    FUNC (∀) : (A -> Language) -> Language
    FUNC (∃) : (A -> Language) -> Language
    FUNC Induction : (A -> (Language -> Language)) -> (Language -> Language)
    FUNC By : Language -> Language -> Language
    FUNC Have : Language -> Language

    ; Hilbert-style proof combinators
    FUNC MP : Language × Language -> Language
    FUNC Gen : (A -> Language) -> A -> Language
    
    ; Natural deduction proof term constructors
    FUNC Assume : Language -> Proofs -> Proofs
    FUNC Exact : Language -> Proofs
    FUNC Apply : Language -> Language -> Proofs -> Proofs
    FUNC Intro : (Language -> Proofs) -> Proofs
    FUNC Elim : Proofs -> (Language -> Proofs) -> Proofs
    FUNC Rewrite : Language -> Proofs -> Proofs
    
    ; Sequent calculus judgments and rules
    PRED (⊢_) : ReasoningSystem × Language -> Bool
    AXIOM AxiomRule : FORALL (Γ : Set(Language)) (A : Language). A IN Γ -> (Γ ⊢ A)
    AXIOM WeakeningRule : FORALL (Γ : Set(Language)) (Δ : Set(Language)) (A : Language). (Γ ⊢ A) -> (Γ ∪ Δ ⊢ A)
    AXIOM AndIntroRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language). (Γ ⊢ A) AND (Γ ⊢ B) -> (Γ ⊢ A ∧ B)
    AXIOM AndElimRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language). (Γ ⊢ A ∧ B) -> (Γ ⊢ A) AND (Γ ⊢ B)
    AXIOM OrIntroRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language). (Γ ⊢ A) OR (Γ ⊢ B) -> (Γ ⊢ A ∨ B)
    AXIOM OrElimRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language) (C : Language). (Γ ⊢ A ∨ B) AND (Γ ∪ {A} ⊢ C) AND (Γ ∪ {B} ⊢ C) -> (Γ ⊢ C)
    AXIOM ImpIntroRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language). (Γ ∪ {A} ⊢ B) -> (Γ ⊢ A -> B)
    AXIOM ImpElimRule : FORALL (Γ : Set(Language)) (A : Language) (B : Language). (Γ ⊢ A) AND (Γ ⊢ A -> B) -> (Γ ⊢ B)
    AXIOM ForallIntroRule : FORALL (Γ : Set(Language)) (φ : A -> Language) (t : A). (FORALL (x : A). Γ ⊢ φ(x)) -> (Γ ⊢ ∀(φ))
    AXIOM ForallElimRule : FORALL (Γ : Set(Language)) (φ : A -> Language) (t : A). (Γ ⊢ ∀(φ)) -> (Γ ⊢ φ(t))
    AXIOM ExistsIntroRule : FORALL (Γ : Set(Language)) (φ : A -> Language) (t : A). (Γ ⊢ φ(t)) -> (Γ ⊢ ∃(φ))
    AXIOM ExistsElimRule : FORALL (Γ : Set(Language)) (φ : A -> Language) (ψ : Language). (Γ ⊢ ∃(φ)) AND (FORALL (x : A). Γ ∪ {φ(x)} ⊢ ψ) -> (Γ ⊢ ψ)
  }

  STRUCTURE {
    ; Soundness and completeness of proof system wrt semantics
    FORALL (Γ : Set(Language)) (A : Language).
      (Γ ⊢ A) <-> (FORALL (M : Model). (FORALL (B : Language). B IN Γ -> M ⊨ B) -> M ⊨ A)

    ; Abstraction and refinement form a Galois connection
    FORALL (S : ReasoningSystem) (A) (s : ReasoningSystem) (a : A).
      α{S, A}(s) ≤ a <-> s ≤ ρ{A, S}(a) 

    ; Interpretation preserves provability
    FORALL (S₁ : ReasoningSystem) (S₂ : ReasoningSystem) (Γ : Set(Language)) (A : Language).
      (Γ ⊢ A) -> (ι{S₁, S₂}(Γ) ⊢ ι{S₁, S₂}(A))
    
    ; Proof terms encode natural deduction proofs
    FORALL (p : Proofs) (A : Language).
      p ⊨ A <-> EXISTS (Γ : Set(Language)). (Γ ⊢ p : A)
  }

  PROOFS {
    THEOREM Consistency {
      STATEMENT: FORALL (S : ReasoningSystem). NOT(∅ ⊢ ⊥)
      PROOF:
        ASSUME S : ReasoningSystem
        ASSUME ∅ ⊢ ⊥
        
        LET M : Model
        HAVE M ⊨ ⊥ BY Completeness WITH (FORALL (B : Language). B IN ∅ -> M ⊨ B) AND M ⊨ ⊥
        HAVE FORALL (B : Language). B IN ∅ -> M ⊨ B  ; Trivial
        HENCE M ⊨ ⊥  ; By above
        CONTRADICTION  ; No model satisfies ⊥
    }
  
    THEOREM CutElimination {
      STATEMENT: FORALL (S : ReasoningSystem) (Γ : Set(Language)) (Δ : Set(Language)) (A : Language) (B : Language).
        (Γ ⊢ A) AND (Δ ∪ {A} ⊢ B) -> (Γ ∪ Δ ⊢ B)

      PROOF:
        ASSUME S : ReasoningSystem, Γ : Set(Language), Δ : Set(Language), A : Language, B : Language
        ASSUME Γ ⊢ A AND Δ ∪ {A} ⊢ B

        BY Induction ON derivation OF Δ ∪ {A} ⊢ B
        CASE AxiomRule:
          IF B = A THEN Γ ⊢ B BY ASSUMPTION
          IF B IN Δ THEN Γ ∪ Δ ⊢ B BY WeakeningRule
        CASE WeakeningRule:
          HAVE Δ ⊢ B BY InductionHypothesis
          Γ ∪ Δ ⊢ B BY WeakeningRule
        CASE AndIntroRule:
          LET B = C ∧ D
          HAVE Δ ∪ {A} ⊢ C AND Δ ∪ {A} ⊢ D
          Γ ∪ Δ ⊢ C BY InductionHypothesis
          Γ ∪ Δ ⊢ D BY InductionHypothesis
          Γ ∪ Δ ⊢ C ∧ D BY AndIntroRule
        ; Other cases omitted
    }
  }
}