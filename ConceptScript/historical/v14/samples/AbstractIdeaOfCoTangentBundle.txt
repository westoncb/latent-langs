CONCEPT TheAbstractEssentialIdeaOfTheRoleAndFunctionOfACoTangentBundle {
  LANGUAGE {
    type Manifold = SmoothManifold(Dimension)
    type Point = Element(Manifold)
    type TangentSpace = TangentSpaceAt(Point)
    type Tangent = Element(TangentSpace)
    
    type CoTangentBundle = Dual(TangentBundle(Manifold))
    type CoTangentSpace = Dual(TangentSpace)  
    type CoTangent = Element(CoTangentSpace)
    
    notation "T*M" = CoTangentBundle(Manifold)
    notation "T*_x M" = CoTangentSpaceAt(Point)
    
    notation "α" = CoTangent
    notation "α(v)" = Pairing(CoTangent, Tangent)
    
    notation "df" = Differential(Function(Manifold -> ℝ))
    notation "ω" = DifferentialForm(Manifold)
    
    notation "X" = VectorField(Manifold)
    notation "φ_t" = Flow(VectorField)
  }
  
  STRUCTURE {
    DualityPairing: {
      axiom Linear(α: CoTangent, u: Tangent, v: Tangent, c: ℝ):
        α(u + v) = α(u) + α(v)
        α(cu) = cα(u)
        
      axiom NonDegeneracy(α: CoTangent, v: Tangent):  
        (∀ α. α(v) = 0) ⟹ v = 0
        (∀ v. α(v) = 0) ⟹ α = 0
    }
    
    DifferentialForms: {
      axiom Linearity(ω: DifferentialForm, X: VectorField, Y: VectorField, c: ℝ):
        ω(X + Y) = ω(X) + ω(Y)  
        ω(cX) = cω(X)
        
      axiom Locality(ω: DifferentialForm, X: VectorField, x: Point):
        ω_x(X) = ω_x(X_x)    ; Depends only on the value of X at x
        
      axiom WedgeProduct(ω: DifferentialForm, η: DifferentialForm):
        (ω ∧ η)(X, Y) = ω(X)η(Y) - ω(Y)η(X)
    }
    
    PullbackFunctoriality: {
      axiom PullbackMap(f: Smooth(Manifold -> Manifold)):  
        f*: Smooth(CoTangentBundle -> CoTangentBundle)
        
      axiom Functoriality(f: Smooth(Manifold -> Manifold), g: Smooth(Manifold -> Manifold)):
        (g ∘ f)* = f* ∘ g*        ; Pullback is functorial
        Id* = Id                   ; Pullback of identity is identity
    }
  }

  PROOFS {
    theorem LocalCoordinates(U: OpenSubset(Manifold), x^i: Coordinate(U)):
      T*U ≃ U × ℝ^n, α = a_i dx^i   ; Local trivialization 
    {
      let (∂/∂x^i) be a basis of TU   ; Coordinate basis  
      let (dx^i) be the dual basis of T*U  ; Dual coordinate basis
      α = a_i dx^i for some a_i: Smooth(U -> ℝ)  ; Expand in dual basis
      T*U ≃ U × ℝ^n via (x, a_i) ↦ (x, a_i dx^i)  ; Local trivialization
    }
    
    theorem ExtendByLinearity(α: PointwiseLinear(TangentBundle -> ℝ)):
      ∃! α': CoTangent such that α'(v) = α(v) ∀ v: Tangent  
    {
      let α'(v) := α(v)   ; Define α' pointwise
      α' is linear by pointwise linearity of α  ; Check linearity
      α' is smooth by smoothness of α and local triviality ; Check smoothness
      α' is unique by non-degeneracy ; Check uniqueness
    }
    
    theorem ExteriorDerivative(f: Smooth(Manifold -> ℝ)):
      df: DifferentialForm, df(X) = X(f)
    {
      let df_x(v) := v(f)   ; Define df pointwise
      df_x is linear by linearity of directional derivative
      df is smooth by smoothness of f
      hence df: DifferentialForm and df(X) = X(f)
    }
    
    theorem StokesTheorem(ω: DifferentialForm, M: CompactOriented(Manifold), ∂M: Boundary(M)):
      ∫_M dω = ∫_∂M ω
    {
      use local coordinates and partition of unity
      apply fundamental theorem of calculus to each coordinate patch
      sum up the contributions using additivity of integration
      the boundary terms cancel out due to orientation
      the result follows by linearity and continuity of integration
    }
  }
}