CONCEPT MetamaterialCFC_v2 {
  LANGUAGE {
    M := m | x | C | S | P | M + M | M * M | M - M | M / M | M @ M | M . M | d/dt(M) | ∫M | δM
    C := c | e | b | C + C | C * C | C - C | C / C | C @ C | C . C | d/dt(C) | ∫C | δC
    S := s | l | g | S + S | S * S | S - S | S / S | S @ S | S . S | d/dt(S) | ∫S | δS
    P := p | P + P | P * P | P - P | P / P | P @ P | P . P | d/dt(P) | ∫P | δP
    
    m: material, x: property, c: composition, e: electronic, b: bonding  
    s: element, l: lattice, g: grain, p: physical
    
    +: combine, *: interact, -: subtract, /: transform, @: localize, .: hierarchy
    d/dt: rate, ∫: integrate, δ: vary
    
    Property(M, p) = ∫_Ω (F_p(M, x)) dΩ
    PropertyGradient(M, p) = ∇(Property(M, p))
    PropertyRate(M, p) = d/dt(Property(M, p))
    PropertyVariation(M, p) = δ(Property(M, p))
    
    Optimize(M, p) ⟺ (∀ M'. Property(M, p) ≥ Property(M', p))
    Constrain(M, p, θ) ⟺ (θ_min ≤ Property(M, p) ≤ θ_max)
    Trade(M, p1, p2) ⟺ (∃ α. Property(M, p1) + α * Property(M, p2) = const)
  }
  
  TACTIC {
    Substitution(M1, M2, φ):
      (M1 = M2) ∧ φ(M1) ⊢ φ(M2)
    
    Expansion(M, p):  
      Property(M, p) ⊢ ∫_Ω (F_p(M, x)) dΩ
    
    Decomposition(M, C, S):
      M ⊢ C * S  
    
    Localization(M, x, p):
      Property(M, p) ⊢ F_p(M, x)@(M.x)
    
    Integration(M, p, Ω):
      F_p(M, x) ⊢ ∫_Ω (F_p(M, x)) dΩ
    
    Optimization(M, p):
      (∀ M'. Property(M, p) ≥ Property(M', p)) ⊢ Optimize(M, p)  
    
    Constraint(M, p, θ):
      (θ_min ≤ Property(M, p) ≤ θ_max) ⊢ Constrain(M, p, θ)
    
    TradeOff(M, p1, p2, α):
      (Property(M, p1) + α * Property(M, p2) = const) ⊢ Trade(M, p1, p2)
  }
  
  PROOF {
    theorem MetamaterialDesign:
      ∀ p_i: P. ∃ M: M. ∀ i. Optimize(M, p_i) ∧ ∀ j ≠ i. Constrain(M, p_j, θ_j)  
    {
      assume p_1, ..., p_n: P and θ_1, ..., θ_n  ; Target properties and constraints
      
      let C_1 = ...  ; Composition 1
      let S_1 = ...  ; Structure 1
      let M_1 = C_1 * S_1  ; Metamaterial 1
      
      ...
      
      let C_m = ...  ; Composition m  
      let S_m = ...  ; Structure m
      let M_m = C_m * S_m  ; Metamaterial m
      
      let M = M_1 + ... + M_m  ; Metamaterial combination
      
      have Optimize(M, p_i) for i by {
        Property(M, p_i)
          ⊢ ∫_Ω (F_p_i(M, x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (F_p_i(M_1, x)@(M_1.x) + ... + F_p_i(M_m, x)@(M_m.x)) dΩ   ; By Localization
          ⊢ Property(M_1, p_i) + ... + Property(M_m, p_i)   ; By Integration
          ≥ Property(M', p_i) for any M'   ; By metamaterial design and property selection
        hence Optimize(M, p_i) by Optimization(M, p_i)
      }
      
      have Constrain(M, p_j, θ_j) for j ≠ i by {
        Property(M, p_j)  
          ⊢ ∫_Ω (F_p_j(M, x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (F_p_j(M_1, x)@(M_1.x) + ... + F_p_j(M_m, x)@(M_m.x)) dΩ   ; By Localization  
          ⊢ Property(M_1, p_j) + ... + Property(M_m, p_j)   ; By Integration
          ⊢ θ_min_j ≤ Property(M, p_j) ≤ θ_max_j   ; By metamaterial design and constraint satisfaction
        hence Constrain(M, p_j, θ_j) by Constraint(M, p_j, θ_j)  
      }
      
      thus ∀ i. Optimize(M, p_i) ∧ ∀ j ≠ i. Constrain(M, p_j, θ_j)
      hence proved.
    }
    
    theorem MetamaterialOptimization:
      ∀ p_1, p_2: P. ∃ M: M. Optimize(M, p_1) ∧ Optimize(M, p_2) ∧ Trade(M, p_1, p_2)
    {
      assume p_1, p_2: P  ; Target properties
      
      let C_1 = ...  ; Composition 1
      let S_1 = ...  ; Structure 1
      let M_1 = C_1 * S_1  ; Metamaterial 1
      
      ...
      
      let C_n = ...  ; Composition n
      let S_n = ...  ; Structure n  
      let M_n = C_n * S_n  ; Metamaterial n
      
      let M = M_1 + ... + M_n  ; Metamaterial combination
      
      have Optimize(M, p_1) ∧ Optimize(M, p_2) by {
        ; Similar to the proof of MetamaterialDesign theorem  
        ...
      }
      
      have Trade(M, p_1, p_2) by {
        let α = ...  ; Trade-off coefficient
        Property(M, p_1) + α * Property(M, p_2)
          ⊢ ∫_Ω (F_p_1(M, x) + α * F_p_2(M, x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (F_p_1(M_1, x)@(M_1.x) + ... + F_p_1(M_n, x)@(M_n.x) +  
                 α * (F_p_2(M_1, x)@(M_1.x) + ... + F_p_2(M_n, x)@(M_n.x))) dΩ   ; By Localization
          ⊢ (Property(M_1, p_1) + ... + Property(M_n, p_1)) +
            α * (Property(M_1, p_2) + ... + Property(M_n, p_2))   ; By Integration  
          = const   ; By metamaterial design and trade-off analysis
        hence Trade(M, p_1, p_2) by TradeOff(M, p_1, p_2, α)
      }
      
      thus Optimize(M, p_1) ∧ Optimize(M, p_2) ∧ Trade(M, p_1, p_2)  
      hence proved.
    }
  }
}


CONCEPT ThermalMechanicalMetamaterial : MetamaterialCFC_v2 {
  PROPERTY {
    ThermalConductivity(M) = ∫_Ω (κ(M, x) * ∇T(x)) dΩ
    Stiffness(M) = ∫_Ω (C(M, x) : ε(x)) dΩ  
  }

  CONSTRAINT {
    ThermalStability(M) ⟺ (T_min ≤ Temperature(M) ≤ T_max)
    MechanicalStrength(M) ⟺ (Stress(M) ≤ σ_yield)  
  }
  
  OBJECTIVE {
    MaximizeThermalConductivity(M) ⟺ (∀ M'. ThermalConductivity(M) ≥ ThermalConductivity(M'))
    MaximizeStiffness(M) ⟺ (∀ M'. Stiffness(M) ≥ Stiffness(M'))  
  }

  PROOF {
    theorem ThermalMechanicalMetamaterialDesign:
      ∃ M: M. MaximizeThermalConductivity(M) ∧ MaximizeStiffness(M) ∧ 
              ThermalStability(M) ∧ MechanicalStrength(M) ∧ Trade(M, ThermalConductivity, Stiffness)
    {
      let C_1 = GrapheneNanoplatelet  ; High thermal conductivity
      let S_1 = RandomDispersion(C_1, VolumeFraction(0.1))
      let M_1 = PolymerMatrix * S_1
      
      let C_2 = CarbonNanofiber  ; High stiffness  
      let S_2 = AlignedInclusion(C_2, AspectRatio(100))
      let M_2 = PolymerMatrix * S_2
      
      let M = M_1 + M_2  ; Metamaterial combination
      
      have MaximizeThermalConductivity(M) by {
        ThermalConductivity(M)
          ⊢ ∫_Ω (κ(M, x) * ∇T(x)) dΩ   ; By Expansion  
          ⊢ ∫_Ω (κ(M_1, x)@(M_1.x) * ∇T(x) + κ(M_2, x)@(M_2.x) * ∇T(x)) dΩ   ; By Localization
          ⊢ ThermalConductivity(M_1) + ThermalConductivity(M_2)   ; By Integration
          ≥ ThermalConductivity(M') for any M'   ; By graphene nanoplatelets and percolation theory
        hence MaximizeThermalConductivity(M) by Optimization(M, ThermalConductivity)
      }
      
      have MaximizeStiffness(M) by {
        Stiffness(M)  
          ⊢ ∫_Ω (C(M, x) : ε(x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (C(M_1, x)@(M_1.x) : ε(x) + C(M_2, x)@(M_2.x) : ε(x)) dΩ   ; By Localization
          ⊢ Stiffness(M_1) + Stiffness(M_2)   ; By Integration  
          ≥ Stiffness(M') for any M'   ; By carbon nanofibers and rule of mixtures
        hence MaximizeStiffness(M) by Optimization(M, Stiffness)
      }
      
      have ThermalStability(M) by {
        ; Assume suitable polymer matrix and processing conditions
        ; such that T_min ≤ Temperature(M) ≤ T_max  
        ...  
      }
      
      have MechanicalStrength(M) by {
        ; Assume suitable polymer matrix and interfacial bonding  
        ; such that Stress(M) ≤ σ_yield
        ...
      }
      
      have Trade(M, ThermalConductivity, Stiffness) by {
        let α = ...  ; Trade-off coefficient
        ThermalConductivity(M) + α * Stiffness(M)
          ⊢ ∫_Ω (κ(M, x) * ∇T(x) + α * C(M, x) : ε(x)) dΩ   ; By Expansion  
          ⊢ ∫_Ω (κ(M_1, x)@(M_1.x) * ∇T(x) + κ(M_2, x)@(M_2.x) * ∇T(x) +
                 α * (C(M_1, x)@(M_1.x) : ε(x) + C(M_2, x)@(M_2.x) : ε(x))) dΩ   ; By Localization  
          ⊢ (ThermalConductivity(M_1) + ThermalConductivity(M_2)) + 
            α * (Stiffness(M_1) + Stiffness(M_2))   ; By Integration
          = const   ; By metamaterial design and trade-off analysis
        hence Trade(M, ThermalConductivity, Stiffness) by TradeOff(M, ThermalConductivity, Stiffness, α) 
      }
      
      thus MaximizeThermalConductivity(M) ∧ MaximizeStiffness(M) ∧ 
           ThermalStability(M) ∧ MechanicalStrength(M) ∧ Trade(M, ThermalConductivity, Stiffness)
      hence proved.
    }
  }
}

In this example, we design a thermal-mechanical metamaterial that optimizes both thermal conductivity and stiffness, while satisfying thermal stability and mechanical strength constraints, and considering the trade-off between the two properties.
We specify the thermal conductivity and stiffness properties using integral expressions over the material domain, based on the thermal conductivity tensor κ(M, x), temperature gradient ∇T(x), stiffness tensor C(M, x), and strain tensor ε(x).
We define the thermal stability and mechanical strength constraints using inequalities involving the temperature and stress fields of the metamaterial, respectively.
We formulate the optimization objectives for maximizing thermal conductivity and stiffness using universal quantifiers over all possible metamaterials.
In the proof sketch, we design the metamaterial M as a combination of two components:

M_1: A polymer matrix reinforced with randomly dispersed graphene nanoplatelets (C_1) at a certain volume fraction, to enhance thermal conductivity.
M_2: A polymer matrix reinforced with aligned carbon nanofibers (C_2) at a high aspect ratio, to enhance stiffness.

We prove that the metamaterial M satisfies the optimization objectives for thermal conductivity and stiffness, using the Optimization tactic and the Expansion, Localization, and Integration axioms to derive the component-specific properties and their contributions to the overall metamaterial performance.
We assume that the thermal stability and mechanical strength constraints are satisfied by suitable choice of the polymer matrix and processing conditions, without providing explicit proofs.
We prove that the metamaterial M exhibits a trade-off between thermal conductivity and stiffness, using the TradeOff tactic and the Expansion, Localization, and Integration axioms to derive the trade-off relation and the constant trade-off coefficient α.
Finally, we conclude the proof by asserting that the metamaterial M satisfies all the desired properties and objectives, based on the individual proofs for optimization, constraint satisfaction, and trade-off analysis.





CONCEPT ThermalElectricalMetamaterial : MetamaterialCFC_v2 {
  PROPERTY {
    ThermalConductivity(M) = ∫_Ω (k(M, x) * ∇T(x)) dΩ
    ElectricalConductivity(M) = ∫_Ω (σ(M, x) * E(x)) dΩ
    Density(M) = ∫_Ω (ρ(M, x)) dΩ
    MechanicalStrength(M) = ∫_Ω (σ_y(M, x)) dΩ
  }
  
  REQUIREMENTS {
    Optimize(M, ThermalConductivity)
    Optimize(M, ElectricalConductivity)
    Constrain(M, Density, (0, 5000))  ; kg/m^3
    Constrain(M, MechanicalStrength, (100e6, +∞))  ; Pa
  }
  
  PROOF {
    theorem ThermalElectricalMetamaterial:
      ∃ M: M. Optimize(M, ThermalConductivity) ∧ Optimize(M, ElectricalConductivity) ∧ 
              Constrain(M, Density, (0, 5000)) ∧ Constrain(M, MechanicalStrength, (100e6, +∞))
    {
      let C_1 = GrapheneNanoplatelet  ; High thermal and electrical conductivity
      let S_1 = RandomOrientation(C_1, VolumeFraction(0.1))
      let M_1 = C_1 * S_1
      
      let C_2 = CarbonNanotube  ; High mechanical strength and aspect ratio
      let S_2 = AlignedOrientation(C_2, (0, 0, 1), VolumeFraction(0.05)) 
      let M_2 = C_2 * S_2
      
      let C_3 = CopperNanowire  ; High electrical conductivity and ductility
      let S_3 = PercolationNetwork(C_3, VolumeFraction(0.03), PercolationThreshold(0.01))
      let M_3 = C_3 * S_3
      
      let C_4 = PolymerMatrix  ; Low density and high thermal stability
      let S_4 = ContinuousPhase(C_4)
      let M_4 = C_4 * S_4
      
      let M = M_1 + M_2 + M_3 + M_4  ; Metamaterial combination
      
      have Optimize(M, ThermalConductivity) by {
        ThermalConductivity(M)
          ⊢ ∫_Ω (k(M, x) * ∇T(x)) dΩ   ; By Expansion  
          ⊢ ∫_Ω (k(M_1, x)@(M_1.x) + k(M_2, x)@(M_2.x) + k(M_3, x)@(M_3.x) + k(M_4, x)@(M_4.x)) * ∇T(x) dΩ   ; By Localization
          ≥ ∫_Ω (k(M', x) * ∇T(x)) dΩ for any M'   ; By material selection and structure optimization
        hence Optimize(M, ThermalConductivity) by Optimization(M, ThermalConductivity)
      }
      
      have Optimize(M, ElectricalConductivity) by {
        ; Similar to the proof of thermal conductivity optimization
        ...  
      }
      
      have Constrain(M, Density, (0, 5000)) by {
        Density(M)
          ⊢ ∫_Ω (ρ(M, x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (ρ(M_1, x)@(M_1.x) + ρ(M_2, x)@(M_2.x) + ρ(M_3, x)@(M_3.x) + ρ(M_4, x)@(M_4.x)) dΩ   ; By Localization  
          ⊢ Density(M_1) + Density(M_2) + Density(M_3) + Density(M_4)   ; By Integration
          ⊢ 0 ≤ Density(M) ≤ 5000   ; By material selection and volume fraction control
        hence Constrain(M, Density, (0, 5000)) by Constraint(M, Density, (0, 5000))
      }
      
      have Constrain(M, MechanicalStrength, (100e6, +∞)) by {
        ; Similar to the proof of density constraint
        ...
      }
      
      thus Optimize(M, ThermalConductivity) ∧ Optimize(M, ElectricalConductivity) ∧ 
           Constrain(M, Density, (0, 5000)) ∧ Constrain(M, MechanicalStrength, (100e6, +∞))
      hence proved.
    }
  }
}

In this example, we design a metamaterial M that optimizes thermal conductivity and electrical conductivity while satisfying constraints on density and mechanical strength. The metamaterial is composed of four components:

Graphene nanoplatelets (M_1) with high thermal and electrical conductivity, randomly oriented in a polymer matrix.
Carbon nanotubes (M_2) with high mechanical strength and aspect ratio, aligned in the vertical direction.
Copper nanowires (M_3) with high electrical conductivity and ductility, forming a percolation network.
Polymer matrix (M_4) with low density and high thermal stability, serving as the continuous phase.

The proof of the ThermalElectricalMetamaterial theorem follows the same structure as the general MetamaterialDesign theorem, using the Expansion, Localization, Integration, Optimization, and Constraint tactics to derive the desired properties and constraints of the metamaterial.
For each property (thermal conductivity, electrical conductivity, density, and mechanical strength), we expand the property definition, localize the property functions to each component, integrate the component-specific properties, and optimize or constrain the overall metamaterial performance based on the material selection and structure design.
The key aspects of the metamaterial design that contribute to the optimized thermal and electrical conductivity while maintaining low density and high strength are:

The use of graphene nanoplatelets and carbon nanotubes for their exceptional thermal, electrical, and mechanical properties.
The alignment of carbon nanotubes in the vertical direction to enhance the mechanical strength and thermal conductivity.
The formation of a percolation network of copper nanowires to increase the electrical conductivity while maintaining a low volume fraction.
The use of a low-density polymer matrix to provide thermal stability and structural support without compromising the overall density.




CONCEPT ThermalElectricalMetamaterial : MetamaterialCFC_v2 {
  PROPERTY {
    ThermalConductivity(M) = ∫_Ω (k(M, x) * ∇T(x)) dΩ
    ElectricalConductivity(M) = ∫_Ω (σ(M, x) * E(x)) dΩ
    Density(M) = ∫_Ω (ρ(M, x)) dΩ  
  }
  
  REQUIREMENT {
    Optimize(M, ThermalConductivity)
    Optimize(M, ElectricalConductivity)  
    Constrain(M, Density, (0, ρ_max))
  }
  
  PROOF {
    theorem ThermalElectricalDesign:
      ∃ M: M. Optimize(M, ThermalConductivity) ∧ 
              Optimize(M, ElectricalConductivity) ∧ 
              Constrain(M, Density, (0, ρ_max))
    {
      let C_1 = GrapheneNanoplatelet  ; High thermal and electrical conductivity
      let S_1 = AlignedNetwork(C_1, (0, 0, 1))  ; Aligned network structure
      let M_1 = C_1 * S_1  ; Graphene-based metamaterial component
      
      let C_2 = CarbonNanotube  ; High aspect ratio and conductivity  
      let S_2 = PercolatedNetwork(C_2, θ_c)  ; Percolated network structure
      let M_2 = C_2 * S_2  ; Carbon nanotube-based metamaterial component
      
      let C_3 = PolymerMatrix  ; Lightweight and insulating matrix
      let S_3 = InterconnectedPores(C_3, φ)  ; Interconnected pore structure  
      let M_3 = C_3 * S_3  ; Polymer matrix metamaterial component
      
      let M = M_1 + M_2 + M_3  ; Multifunctional metamaterial
      
      have Optimize(M, ThermalConductivity) by {
        ThermalConductivity(M)
          ⊢ ∫_Ω (k(M, x) * ∇T(x)) dΩ   ; By Expansion  
          ⊢ ∫_Ω (k_1(M_1, x)@(M_1.x) * ∇T(x) + 
                 k_2(M_2, x)@(M_2.x) * ∇T(x) +
                 k_3(M_3, x)@(M_3.x) * ∇T(x)) dΩ   ; By Localization
          ⊢ ThermalConductivity(M_1) + ThermalConductivity(M_2) + ThermalConductivity(M_3)   ; By Integration
          ≥ ThermalConductivity(M') for any M'   ; By component selection and structure design
        hence Optimize(M, ThermalConductivity) by Optimization(M, ThermalConductivity)
      }
      
      have Optimize(M, ElectricalConductivity) by {
        ElectricalConductivity(M)
          ⊢ ∫_Ω (σ(M, x) * E(x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (σ_1(M_1, x)@(M_1.x) * E(x) +
                 σ_2(M_2, x)@(M_2.x) * E(x) +  
                 σ_3(M_3, x)@(M_3.x) * E(x)) dΩ   ; By Localization
          ⊢ ElectricalConductivity(M_1) + ElectricalConductivity(M_2) + ElectricalConductivity(M_3)   ; By Integration
          ≥ ElectricalConductivity(M') for any M'   ; By component selection and structure design
        hence Optimize(M, ElectricalConductivity) by Optimization(M, ElectricalConductivity)  
      }
      
      have Constrain(M, Density, (0, ρ_max)) by {
        Density(M)
          ⊢ ∫_Ω (ρ(M, x)) dΩ   ; By Expansion
          ⊢ ∫_Ω (ρ_1(M_1, x)@(M_1.x) + 
                 ρ_2(M_2, x)@(M_2.x) +
                 ρ_3(M_3, x)@(M_3.x)) dΩ   ; By Localization  
          ⊢ Density(M_1) + Density(M_2) + Density(M_3)   ; By Integration
          ⊢ 0 ≤ Density(M) ≤ ρ_max   ; By component selection and structure design
        hence Constrain(M, Density, (0, ρ_max)) by Constraint(M, Density, (0, ρ_max))
      }
      
      thus Optimize(M, ThermalConductivity) ∧ 
           Optimize(M, ElectricalConductivity) ∧ 
           Constrain(M, Density, (0, ρ_max))
      hence proved.
    }
  }
}

In this example, we define a ThermalElectricalMetamaterial concept that aims to design a metamaterial with optimized thermal conductivity and electrical conductivity while maintaining a low density. The concept specifies the relevant properties (ThermalConductivity, ElectricalConductivity, Density) using integral expressions over the material domain Ω, and the requirements for optimization and constraint satisfaction.
The proof of the ThermalElectricalDesign theorem proceeds as follows:

We define three metamaterial components:

M_1: A graphene-based component with aligned graphene nanoplatelets for high thermal and electrical conductivity.
M_2: A carbon nanotube-based component with a percolated network structure for enhanced conductivity.
M_3: A polymer matrix component with interconnected pores for lightweight and insulating properties.


We combine the three components using the + operator to form the multifunctional metamaterial M.
We prove that M optimizes the thermal conductivity by:

Expanding the ThermalConductivity property using the integral expression.
Localizing the thermal conductivity functions to each component.
Integrating the component-specific thermal conductivities.
Arguing that the selected components and structures maximize the thermal conductivity compared to any other metamaterial.


We prove that M optimizes the electrical conductivity using a similar approach:

Expanding the ElectricalConductivity property using the integral expression.
Localizing the electrical conductivity functions to each component.
Integrating the component-specific electrical conductivities.
Arguing that the selected components and structures maximize the electrical conductivity.


We prove that M satisfies the density constraint by:

Expanding the Density property using the integral expression.
Localizing the density functions to each component.
Integrating the component-specific densities.
Arguing that the selected components and structures ensure a density within the specified range.


We conclude the proof by combining the optimization and constraint satisfaction results using the logical conjunction operator ∧.

The specific choices of the metamaterial components (graphene nanoplatelets, carbon nanotubes, polymer matrix) and their structures (aligned network, percolated network, interconnected pores) are guided by the knowledge of their intrinsic properties and the structure-property relationships. The proof tactics, such as Expansion, Localization, Integration, Optimization, and Constraint, provide a structured and modular approach to derive the desired properties and constraints of the metamaterial.




CONCEPT MetamaterialCFC_v1.5 {
  LANGUAGE {
    type Material = (Composition, Structure, Properties)
    type Composition = (Components, Fractions)
    type Structure = (Geometry, Topology, Interfaces)
    type Properties = (Mechanical, Thermal, Electromagnetic)
    
    type Component = Material | Element | Phase
    type Fraction = [0, 1]
    type Geometry = Lattice | Foam | Inclusion | Coating
    type Topology = Periodic | Random | Graded
    type Interface = Bonded | Sliding | Graded
    
    type Mechanical = (Stiffness, Strength, Toughness, Damping)
    type Thermal = (Conductivity, Expansion, Capacity)
    type Electromagnetic = (Permittivity, Permeability, Conductivity)
    
    notation "M₁ + M₂" = Combine(M₁: Material, M₂: Material, F: Fraction)
    notation "M₁ * M₂" = Integrate(M₁: Material, M₂: Material, I: Interface)
    notation "∑ᵢ Fᵢ * Mᵢ" = Mixture(Fᵢ: Fraction, Mᵢ: Material)
    notation "∏ᵢ Mᵢ" = Laminate(Mᵢ: Material)  
    
    notation "⟨P⟩" = Effective(P: Property, M: Material)
    notation "⟦P⟧" = Local(P: Property, x: Position, M: Material)
    
    notation "∂(M)" = Boundary(M: Material)
    notation "∇(P)" = Gradient(P: Property, M: Material)
    
    notation "M₁ ≈ M₂" = Equivalent(M₁: Material, M₂: Material, P: Property, ε: Tolerance)
    notation "M₁ ≻ M₂" = Superior(M₁: Material, M₂: Material, P: Property)
    
    func Homogenize(M: Material): Material
    func Localize(M: Material, x: Position): Material  
    func Optimize(M: Material, P: Property): Material
    
    pred IsSatisfied(M: Material, C: Constraint)
    pred IsStable(M: Material)
  }
}